D G "__PCH__" 0 0 ""5.112""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""16-Mar-25""
D G "__TIME__" 0 0 ""12:33:09""
D G "_UNICODE" 0 0 ""?""
D G "__EVAL" 0 0 ""?"" "PIC18F46K22 MCU ST7789 2.4 INÇ TFT EKRAN"
D G "TFT_RST" 0 3 "PIN_D0" "RESET PÝN"
D G "TFT_DC" 0 4 "PIN_D1" "DATA VE KOMUT PÝN"
c L "set_tris_a" 1 1 6 "FUNCTION"
F N "set_tris_a" 1 45 ""
V L "value" 1 45 "int8" `55 
F B "set_tris_a" 1 45 "void(int8 value)" `54 
F N "set_tris_b" 1 46 ""
V L "value" 1 46 "int8" `57 
F B "set_tris_b" 1 46 "void(int8 value)" `56 
F N "set_tris_c" 1 47 ""
V L "value" 1 47 "int8" `59 
F B "set_tris_c" 1 47 "void(int8 value)" `58 
F N "set_tris_d" 1 48 ""
V L "value" 1 48 "int8" `61 
F B "set_tris_d" 1 48 "void(int8 value)" `60 
F N "set_tris_e" 1 49 ""
V L "value" 1 49 "int8" `63 
F B "set_tris_e" 1 49 "void(int8 value)" `62 
F N "get_tris_a" 1 50 ""
F B "get_tris_a" 1 50 "int8()" `64 
F N "get_tris_b" 1 51 ""
F B "get_tris_b" 1 51 "int8()" `65 
F N "get_tris_c" 1 52 ""
F B "get_tris_c" 1 52 "int8()" `66 
F N "get_tris_d" 1 53 ""
F B "get_tris_d" 1 53 "int8()" `67 
F N "get_tris_e" 1 54 ""
F B "get_tris_e" 1 54 "int8()" `68 
F N "output_a" 1 55 ""
V L "value" 1 55 "int8" `70 
F B "output_a" 1 55 "void(int8 value)" `69 
F N "output_b" 1 56 ""
V L "value" 1 56 "int8" `72 
F B "output_b" 1 56 "void(int8 value)" `71 
F N "output_c" 1 57 ""
V L "value" 1 57 "int8" `74 
F B "output_c" 1 57 "void(int8 value)" `73 
F N "output_d" 1 58 ""
V L "value" 1 58 "int8" `76 
F B "output_d" 1 58 "void(int8 value)" `75 
F N "output_e" 1 59 ""
V L "value" 1 59 "int8" `78 
F B "output_e" 1 59 "void(int8 value)" `77 
F N "input_a" 1 60 ""
F B "input_a" 1 60 "int8()" `79 
F N "input_b" 1 61 ""
F B "input_b" 1 61 "int8()" `80 
F N "input_c" 1 62 ""
F B "input_c" 1 62 "int8()" `81 
F N "input_d" 1 63 ""
F B "input_d" 1 63 "int8()" `82 
F N "input_e" 1 64 ""
F B "input_e" 1 64 "int8()" `83 
F N "input_change_a" 1 65 ""
F B "input_change_a" 1 65 "int8()" `84 
F N "input_change_b" 1 66 ""
F B "input_change_b" 1 66 "int8()" `85 
F N "input_change_c" 1 67 ""
F B "input_change_c" 1 67 "int8()" `86 
F N "input_change_d" 1 68 ""
F B "input_change_d" 1 68 "int8()" `87 
F N "input_change_e" 1 69 ""
F B "input_change_e" 1 69 "int8()" `88 
F N "port_b_pullups" 1 70 ""
V L "upmask" 1 70 "int8" `90 
F B "port_b_pullups" 1 70 "void(int8 upmask)" `89 
F N "port_e_pullups" 1 71 ""
V L "value" 1 71 "int8" `92 
F B "port_e_pullups" 1 71 "void(int8 value)" `91 
F N "set_slow_slew_a" 1 72 ""
V L "value" 1 72 "int8" `94 
F B "set_slow_slew_a" 1 72 "void(int8 value)" `93 
F N "set_slow_slew_b" 1 73 ""
V L "value" 1 73 "int8" `96 
F B "set_slow_slew_b" 1 73 "void(int8 value)" `95 
F N "set_slow_slew_c" 1 74 ""
V L "value" 1 74 "int8" `98 
F B "set_slow_slew_c" 1 74 "void(int8 value)" `97 
F N "set_slow_slew_d" 1 75 ""
V L "value" 1 75 "int8" `100 
F B "set_slow_slew_d" 1 75 "void(int8 value)" `99 
F N "set_slow_slew_e" 1 76 ""
V L "value" 1 76 "int8" `102 
F B "set_slow_slew_e" 1 76 "void(int8 value)" `101 
F N "input" 1 77 ""
V L "pin" 1 77 "int16" `104 
F B "input" 1 77 "int8(int16 pin)" `103 
F N "input_state" 1 78 ""
V L "pin" 1 78 "int16" `106 
F B "input_state" 1 78 "int8(int16 pin)" `105 
F N "output_low" 1 79 ""
V L "pin" 1 79 "int16" `108 
F B "output_low" 1 79 "void(int16 pin)" `107 
F N "output_high" 1 80 ""
V L "pin" 1 80 "int16" `110 
F B "output_high" 1 80 "void(int16 pin)" `109 
F N "output_toggle" 1 81 ""
V L "pin" 1 81 "int16" `112 
F B "output_toggle" 1 81 "void(int16 pin)" `111 
F N "output_bit" 1 82 ""
V L "pin" 1 82 "int16" `114 
V L "level" 1 82 "int8" `115 
F B "output_bit" 1 82 "void(int16 pin,int8 level)" `113 
F N "output_float" 1 83 ""
V L "pin" 1 83 "int16" `117 
F B "output_float" 1 83 "void(int16 pin)" `116 
F N "output_drive" 1 84 ""
V L "pin" 1 84 "int16" `119 
F B "output_drive" 1 84 "void(int16 pin)" `118  "Constants used to identify pins in the above are:"
D G "PIN_A0" 1 88 "31744"
D G "PIN_A1" 1 89 "31745"
D G "PIN_A2" 1 90 "31746"
D G "PIN_A3" 1 91 "31747"
D G "PIN_A4" 1 92 "31748"
D G "PIN_A5" 1 93 "31749"
D G "PIN_A6" 1 94 "31750"
D G "PIN_A7" 1 95 "31751"
D G "PIN_B0" 1 97 "31752"
D G "PIN_B1" 1 98 "31753"
D G "PIN_B2" 1 99 "31754"
D G "PIN_B3" 1 100 "31755"
D G "PIN_B4" 1 101 "31756"
D G "PIN_B5" 1 102 "31757"
D G "PIN_B6" 1 103 "31758"
D G "PIN_B7" 1 104 "31759"
D G "PIN_C0" 1 106 "31760"
D G "PIN_C1" 1 107 "31761"
D G "PIN_C2" 1 108 "31762"
D G "PIN_C3" 1 109 "31763"
D G "PIN_C4" 1 110 "31764"
D G "PIN_C5" 1 111 "31765"
D G "PIN_C6" 1 112 "31766"
D G "PIN_C7" 1 113 "31767"
D G "PIN_D0" 1 115 "31768"
D G "PIN_D1" 1 116 "31769"
D G "PIN_D2" 1 117 "31770"
D G "PIN_D3" 1 118 "31771"
D G "PIN_D4" 1 119 "31772"
D G "PIN_D5" 1 120 "31773"
D G "PIN_D6" 1 121 "31774"
D G "PIN_D7" 1 122 "31775"
D G "PIN_E0" 1 124 "31776"
D G "PIN_E1" 1 125 "31777"
D G "PIN_E2" 1 126 "31778"
D G "PIN_E3" 1 127 "31779"
D G "FALSE" 1 130 "0"
D G "TRUE" 1 131 "1"
D G "BYTE" 1 133 "int8"
D G "BOOLEAN" 1 134 "int1"
D G "getc" 1 136 "getch"
D G "fgetc" 1 137 "getch"
D G "getchar" 1 138 "getch"
D G "putc" 1 139 "putchar"
D G "fputc" 1 140 "putchar"
D G "fgets" 1 141 "gets"
D G "fputs" 1 142 "puts"
c L "output_drive" 1 1 3 "FUNCTION"
F N "restart_cause" 1 147 ""
F B "restart_cause" 1 147 "int8()" `120 
F N "reset_cpu" 1 148 ""
F B "reset_cpu" 1 148 "void()" `121 
F N "sleep" 1 149 ""
F B "sleep" 1 149 "void()" `122 
F N "sleep" 1 150 ""
V L "type" 1 150 "int8" `124 
F B "sleep" 1 150 "void(int8 type)" `123  "Constants returned from RESTART_CAUSE() are:"
D G "WDT_TIMEOUT" 1 152 "7"
D G "MCLR_FROM_SLEEP" 1 153 "11"
D G "MCLR_FROM_RUN" 1 154 "15"
D G "NORMAL_POWER_UP" 1 155 "12"
D G "BROWNOUT_RESTART" 1 156 "14"
D G "WDT_FROM_SLEEP" 1 157 "3"
D G "RESET_INSTRUCTION" 1 158 "0"
D G "SLEEP_FULL" 1 161 "0" "Default"
D G "SLEEP_IDLE" 1 162 "1" "Clock and peripherals don't stop"
c L "sleep" 1 1 5 "FUNCTION"
F N "setup_timer_0" 1 169 ""
V L "mode" 1 169 "int8" `126 
F B "setup_timer_0" 1 169 "void(int8 mode)" `125 
F N "set_timer0" 1 170 ""
V L "value" 1 170 "int16" `128 
F B "set_timer0" 1 170 "void(int16 value)" `127 
F N "get_timer0" 1 171 ""
F B "get_timer0" 1 171 "int16()" `129 
F N "setup_counters" 1 172 ""
V L "mode" 1 172 "int8" `131 
V L "prescaler" 1 172 "int8" `132 
F B "setup_counters" 1 172 "void(int8 mode,int8 prescaler)" `130 
F N "set_rtcc" 1 173 ""
V L "value" 1 173 "int16" `134 
F B "set_rtcc" 1 173 "void(int16 value)" `133 
F N "get_rtcc" 1 174 ""
F B "get_rtcc" 1 174 "int16()" `135  "Constants used for SETUP_TIMER_0() are:"
D G "T0_INTERNAL" 1 176 "0"
D G "T0_EXT_L_TO_H" 1 177 "32"
D G "T0_EXT_H_TO_L" 1 178 "48"
D G "T0_DIV_1" 1 180 "8"
D G "T0_DIV_2" 1 181 "0"
D G "T0_DIV_4" 1 182 "1"
D G "T0_DIV_8" 1 183 "2"
D G "T0_DIV_16" 1 184 "3"
D G "T0_DIV_32" 1 185 "4"
D G "T0_DIV_64" 1 186 "5"
D G "T0_DIV_128" 1 187 "6"
D G "T0_DIV_256" 1 188 "7"
D G "T0_OFF" 1 190 "0x80"
D G "T0_8_BIT" 1 192 "0x40"
D G "RTCC_INTERNAL" 1 196 "0"
D G "RTCC_EXT_L_TO_H" 1 197 "32"
D G "RTCC_EXT_H_TO_L" 1 198 "48"
D G "RTCC_DIV_1" 1 199 "8"
D G "RTCC_DIV_2" 1 200 "0"
D G "RTCC_DIV_4" 1 201 "1"
D G "RTCC_DIV_8" 1 202 "2"
D G "RTCC_DIV_16" 1 203 "3"
D G "RTCC_DIV_32" 1 204 "4"
D G "RTCC_DIV_64" 1 205 "5"
D G "RTCC_DIV_128" 1 206 "6"
D G "RTCC_DIV_256" 1 207 "7"
D G "RTCC_OFF" 1 208 "0x80"
D G "RTCC_8_BIT" 1 209 "0x40"
c L "get_rtcc" 1 1 8 "FUNCTION"
F N "setup_wdt" 1 220 ""
V L "mode" 1 220 "int16" `137 
F B "setup_wdt" 1 220 "void(int16 mode)" `136 
F N "restart_wdt" 1 221 ""
F B "restart_wdt" 1 221 "void()" `138  "Constants used for SETUP_WDT() are:"
D G "WDT_ON" 1 223 "0x100"
D G "WDT_OFF" 1 224 "0"
D G "WDT_4MS" 1 226 "0x300"
D G "WDT_8MS" 1 227 "0x500"
D G "WDT_16MS" 1 228 "0x700"
D G "WDT_32MS" 1 229 "0x900"
D G "WDT_64MS" 1 230 "0xB00"
D G "WDT_128MS" 1 231 "0xD00"
D G "WDT_256MS" 1 232 "0xF00"
D G "WDT_512MS" 1 233 "0x1100"
D G "WDT_1S" 1 234 "0x1300"
D G "WDT_2S" 1 235 "0x1500"
D G "WDT_4S" 1 236 "0x1700"
D G "WDT_8S" 1 237 "0x1900"
D G "WDT_16S" 1 238 "0x1B00"
D G "WDT_32S" 1 239 "0x1D00"
D G "WDT_64S" 1 240 "0x1F00"
D G "WDT_128S" 1 241 "0x2100"
c L "restart_wdt" 1 1 3 "FUNCTION"
F N "setup_timer_1" 1 246 ""
V L "mode" 1 246 "int16" `140 
F B "setup_timer_1" 1 246 "void(int16 mode)" `139 
F N "get_timer1" 1 247 ""
F B "get_timer1" 1 247 "int16()" `141 
F N "set_timer1" 1 248 ""
V L "value" 1 248 "int16" `143 
F B "set_timer1" 1 248 "void(int16 value)" `142  "Constants used for SETUP_TIMER_1() are:"
D G "T1_DISABLED" 1 251 "0"
D G "T1_INTERNAL" 1 252 "0x07"
D G "T1_EXTERNAL" 1 253 "0x87"
D G "T1_EXTERNAL_SYNC" 1 254 "0x83"
D G "T1_FOSC" 1 255 "0x47"
D G "T1_ENABLE_SOSC" 1 257 "0x08"
D G "T1_DIV_BY_1" 1 259 "0"
D G "T1_DIV_BY_2" 1 260 "0x10"
D G "T1_DIV_BY_4" 1 261 "0x20"
D G "T1_DIV_BY_8" 1 262 "0x30"
D G "T1_GATE" 1 264 "0x8000"
D G "T1_GATE_INVERTED" 1 265 "0xC000"
D G "T1_GATE_TOGGLE" 1 266 "0xA000"
D G "T1_GATE_SINGLE" 1 267 "0x9000"
D G "T1_GATE_TIMER2" 1 268 "0x8100"
D G "T1_GATE_COMP1" 1 269 "0x8200"
D G "T1_GATE_COMP2" 1 270 "0x8300"
c L "set_timer1" 1 1 3 "FUNCTION"
F N "setup_timer_2" 1 275 ""
V L "mode" 1 275 "int8" `145 
V L "period" 1 275 "int8" `146 
V L "postscale" 1 275 "int8" `147 
F B "setup_timer_2" 1 275 "void(int8 mode,int8 period,int8 postscale)" `144 
F N "get_timer2" 1 276 ""
F B "get_timer2" 1 276 "int8()" `148 
F N "set_timer2" 1 277 ""
V L "value" 1 277 "int8" `150 
F B "set_timer2" 1 277 "void(int8 value)" `149  "Constants used for SETUP_TIMER_2() are:"
D G "T2_DISABLED" 1 279 "0"
D G "T2_DIV_BY_1" 1 280 "4"
D G "T2_DIV_BY_4" 1 281 "5"
D G "T2_DIV_BY_16" 1 282 "6"
c L "set_timer2" 1 1 3 "FUNCTION"
F N "setup_timer_3" 1 287 ""
V L "mode" 1 287 "int16" `152 
F B "setup_timer_3" 1 287 "void(int16 mode)" `151 
F N "get_timer3" 1 288 ""
F B "get_timer3" 1 288 "int16()" `153 
F N "set_timer3" 1 289 ""
V L "value" 1 289 "int16" `155 
F B "set_timer3" 1 289 "void(int16 value)" `154  "Constants used for SETUP_TIMER_3() are:"
D G "T3_DISABLED" 1 292 "0"
D G "T3_INTERNAL" 1 293 "0x07"
D G "T3_EXTERNAL" 1 294 "0x87"
D G "T3_EXTERNAL_SYNC" 1 295 "0x83"
D G "T3_FOSC" 1 296 "0x47"
D G "T3_ENABLE_SOSC" 1 298 "0x08"
D G "T3_DIV_BY_1" 1 300 "0"
D G "T3_DIV_BY_2" 1 301 "0x10"
D G "T3_DIV_BY_4" 1 302 "0x20"
D G "T3_DIV_BY_8" 1 303 "0x30"
D G "T3_GATE" 1 305 "0x8000"
D G "T3_GATE_INVERTED" 1 306 "0xC000"
D G "T3_GATE_TOGGLE" 1 307 "0xA000"
D G "T3_GATE_SINGLE" 1 308 "0x9000"
D G "T3_GATE_TIMER4" 1 309 "0x8100"
D G "T3_GATE_COMP1" 1 310 "0x8200"
D G "T3_GATE_COMP2" 1 311 "0x8300"
c L "set_timer3" 1 1 3 "FUNCTION"
F N "setup_timer_4" 1 316 ""
V L "mode" 1 316 "int16" `157 
V L "period" 1 316 "int8" `158 
V L "postscaler" 1 316 "int8" `159 
F B "setup_timer_4" 1 316 "void(int16 mode,int8 period,int8 postscaler)" `156 
F N "get_timer4" 1 317 ""
F B "get_timer4" 1 317 "int8()" `160 
F N "set_timer4" 1 318 ""
V L "value" 1 318 "int8" `162 
F B "set_timer4" 1 318 "void(int8 value)" `161  "Constants used for SETUP_TIMER_4() are:"
D G "T4_DISABLED" 1 320 "0"
D G "T4_DIV_BY_1" 1 321 "4"
D G "T4_DIV_BY_4" 1 322 "5"
D G "T4_DIV_BY_16" 1 323 "6"
c L "set_timer4" 1 1 3 "FUNCTION"
F N "setup_timer_5" 1 328 ""
V L "mode" 1 328 "int16" `164 
F B "setup_timer_5" 1 328 "void(int16 mode)" `163 
F N "get_timer5" 1 329 ""
F B "get_timer5" 1 329 "int16()" `165 
F N "set_timer5" 1 330 ""
V L "value" 1 330 "int16" `167 
F B "set_timer5" 1 330 "void(int16 value)" `166  "Constants used for SETUP_TIMER_5() are:"
D G "T5_DISABLED" 1 333 "0"
D G "T5_INTERNAL" 1 334 "0x07"
D G "T5_EXTERNAL" 1 335 "0x87"
D G "T5_EXTERNAL_SYNC" 1 336 "0x83"
D G "T5_FOSC" 1 337 "0x47"
D G "T5_LFINTRC" 1 338 "0xC7"
D G "T5_ENABLE_SOSC" 1 340 "0x08"
D G "T5_DIV_BY_1" 1 342 "0"
D G "T5_DIV_BY_2" 1 343 "0x10"
D G "T5_DIV_BY_4" 1 344 "0x20"
D G "T5_DIV_BY_8" 1 345 "0x30"
D G "T5_GATE" 1 347 "0x8000"
D G "T5_GATE_INVERTED" 1 348 "0xC000"
D G "T5_GATE_TOGGLE" 1 349 "0xA000"
D G "T5_GATE_SINGLE" 1 350 "0x9000"
D G "T5_GATE_TIMER6" 1 351 "0x8100"
D G "T5_GATE_COMP1" 1 352 "0x8200"
D G "T5_GATE_COMP2" 1 353 "0x8300"
c L "set_timer5" 1 1 3 "FUNCTION"
F N "setup_timer_6" 1 358 ""
V L "mode" 1 358 "int16" `169 
V L "period" 1 358 "int8" `170 
V L "postscaler" 1 358 "int8" `171 
F B "setup_timer_6" 1 358 "void(int16 mode,int8 period,int8 postscaler)" `168 
F N "get_timer6" 1 359 ""
F B "get_timer6" 1 359 "int8()" `172 
F N "set_timer6" 1 360 ""
V L "value" 1 360 "int8" `174 
F B "set_timer6" 1 360 "void(int8 value)" `173  "Constants used for SETUP_TIMER_6() are:"
D G "T6_DISABLED" 1 363 "0"
D G "T6_DIV_BY_1" 1 364 "4"
D G "T6_DIV_BY_4" 1 365 "5"
D G "T6_DIV_BY_16" 1 366 "6"
c L "set_timer6" 1 1 4 "FUNCTION"
F N "setup_ccp1" 1 372 ""
V L "mode" 1 372 "int32" `176 
F B "setup_ccp1" 1 372 "void(int32 mode)" `175 
F N "setup_ccp1" 1 373 ""
V L "mode" 1 373 "int32" `178 
V L "pwm" 1 373 "int8" `179 
F B "setup_ccp1" 1 373 "void(int32 mode,int8 pwm)" `177 
F N "set_pwm1_duty" 1 374 ""
V L "value" 1 374 "int8" `181 
F B "set_pwm1_duty" 1 374 "void(int8 value)" `180 
F N "set_pwm1_duty" 1 375 ""
V L "value" 1 375 "int16" `183 
F B "set_pwm1_duty" 1 375 "void(int16 value)" `182  "Constants used for SETUP_CCPx() are:"
D G "CCP_OFF" 1 377 "0"
D G "CCP_CAPTURE_FE" 1 378 "0x04"
D G "CCP_CAPTURE_RE" 1 379 "0x05"
D G "CCP_CAPTURE_DIV_4" 1 380 "0x06"
D G "CCP_CAPTURE_DIV_16" 1 381 "0x07"
D G "CCP_COMPARE_SET_ON_MATCH" 1 382 "0x08"
D G "CCP_COMPARE_CLR_ON_MATCH" 1 383 "0x09"
D G "CCP_COMPARE_INT" 1 384 "0x0A"
D G "CCP_COMPARE_INT_AND_TOGGLE" 1 385 "0x02"
D G "CCP_COMPARE_RESET_TIMER" 1 386 "0x0B"
D G "CCP_PWM" 1 387 "0x0C"
D G "CCP_PWM_PLUS_1" 1 388 "0x1c"
D G "CCP_PWM_PLUS_2" 1 389 "0x2c"
D G "CCP_PWM_PLUS_3" 1 390 "0x3c"
c L "set_pwm1_duty" 1 1 1 "FUNCTION"
D G "CCP_USE_TIMER1_AND_TIMER2" 1 400 "0x0000"
D G "CCP_USE_TIMER3_AND_TIMER4" 1 401 "0x0100"
D G "CCP_USE_TIMER5_AND_TIMER6" 1 402 "0x0200"
D G "CCP_PWM_H_H" 1 405 "0x0c"
D G "CCP_PWM_H_L" 1 406 "0x0d"
D G "CCP_PWM_L_H" 1 407 "0x0e"
D G "CCP_PWM_L_L" 1 408 "0x0f"
D G "CCP_PWM_FULL_BRIDGE" 1 410 "0x40"
D G "CCP_PWM_FULL_BRIDGE_REV" 1 411 "0xC0"
D G "CCP_PWM_HALF_BRIDGE" 1 412 "0x80"
D G "CCP_SHUTDOWN_ON_COMP1" 1 414 "0x100000"
D G "CCP_SHUTDOWN_ON_COMP2" 1 415 "0x200000"
D G "CCP_SHUTDOWN_ON_COMP" 1 416 "0x300000"
D G "CCP_SHUTDOWN_ON_INT0" 1 417 "0x400000"
D G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 418 "0x500000"
D G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 419 "0x600000"
D G "CCP_SHUTDOWN_ON_COMP_INT0" 1 420 "0x700000"
D G "CCP_SHUTDOWN_AC_L" 1 422 "0x000000"
D G "CCP_SHUTDOWN_AC_H" 1 423 "0x040000"
D G "CCP_SHUTDOWN_AC_F" 1 424 "0x080000"
D G "CCP_SHUTDOWN_BD_L" 1 426 "0x000000"
D G "CCP_SHUTDOWN_BD_H" 1 427 "0x010000"
D G "CCP_SHUTDOWN_BD_F" 1 428 "0x020000"
D G "CCP_SHUTDOWN_RESTART" 1 430 "0x80000000"
D G "CCP_PULSE_STEERING_A" 1 432 "0x01000000"
D G "CCP_PULSE_STEERING_B" 1 433 "0x02000000"
D G "CCP_PULSE_STEERING_C" 1 434 "0x04000000"
D G "CCP_PULSE_STEERING_D" 1 435 "0x08000000"
D G "CCP_PULSE_STEERING_SYNC" 1 436 "0x10000000"
c L "set_pwm1_duty" 1 1 1 "FUNCTION"
F N "setup_ccp2" 1 439 ""
V L "mode" 1 439 "int32" `188 
F B "setup_ccp2" 1 439 "void(int32 mode)" `187 
F N "setup_ccp2" 1 440 ""
V L "mode" 1 440 "int32" `190 
V L "pwm" 1 440 "int8" `191 
F B "setup_ccp2" 1 440 "void(int32 mode,int8 pwm)" `189 
F N "set_pwm2_duty" 1 441 ""
V L "value" 1 441 "int8" `193 
F B "set_pwm2_duty" 1 441 "void(int8 value)" `192 
F N "set_pwm2_duty" 1 442 ""
V L "value" 1 442 "int16" `195 
F B "set_pwm2_duty" 1 442 "void(int16 value)" `194 
c L "set_pwm2_duty" 1 1 1 "FUNCTION"
F N "setup_ccp3" 1 448 ""
V L "mode" 1 448 "int32" `200 
F B "setup_ccp3" 1 448 "void(int32 mode)" `199 
F N "setup_ccp3" 1 449 ""
V L "mode" 1 449 "int32" `202 
V L "pwm" 1 449 "int8" `203 
F B "setup_ccp3" 1 449 "void(int32 mode,int8 pwm)" `201 
F N "set_pwm3_duty" 1 450 ""
V L "value" 1 450 "int8" `205 
F B "set_pwm3_duty" 1 450 "void(int8 value)" `204 
F N "set_pwm3_duty" 1 451 ""
V L "value" 1 451 "int16" `207 
F B "set_pwm3_duty" 1 451 "void(int16 value)" `206 
c L "set_pwm3_duty" 1 1 1 "FUNCTION"
F N "setup_ccp4" 1 457 ""
V L "mode" 1 457 "int32" `212 
F B "setup_ccp4" 1 457 "void(int32 mode)" `211 
F N "setup_ccp4" 1 458 ""
V L "mode" 1 458 "int32" `214 
V L "pwm" 1 458 "int8" `215 
F B "setup_ccp4" 1 458 "void(int32 mode,int8 pwm)" `213 
F N "set_pwm4_duty" 1 459 ""
V L "value" 1 459 "int8" `217 
F B "set_pwm4_duty" 1 459 "void(int8 value)" `216 
F N "set_pwm4_duty" 1 460 ""
V L "value" 1 460 "int16" `219 
F B "set_pwm4_duty" 1 460 "void(int16 value)" `218 
c L "set_pwm4_duty" 1 1 1 "FUNCTION"
F N "setup_ccp5" 1 466 ""
V L "mode" 1 466 "int32" `224 
F B "setup_ccp5" 1 466 "void(int32 mode)" `223 
F N "setup_ccp5" 1 467 ""
V L "mode" 1 467 "int32" `226 
V L "pwm" 1 467 "int8" `227 
F B "setup_ccp5" 1 467 "void(int32 mode,int8 pwm)" `225 
F N "set_pwm5_duty" 1 468 ""
V L "value" 1 468 "int8" `229 
F B "set_pwm5_duty" 1 468 "void(int8 value)" `228 
F N "set_pwm5_duty" 1 469 ""
V L "value" 1 469 "int16" `231 
F B "set_pwm5_duty" 1 469 "void(int16 value)" `230 
c L "set_pwm5_duty" 1 1 3 "FUNCTION"
F N "setup_spi" 1 477 ""
V L "mode" 1 477 "int32" `236 
F B "setup_spi" 1 477 "void(int32 mode)" `235 
F N "spi_write" 1 478 ""
V L "value" 1 478 "int8" `238 
F B "spi_write" 1 478 "void(int8 value)" `237 
F N "spi_write" 1 479 ""
V L "wait" 1 479 "int8" `240 
V L "value" 1 479 "int8" `241 
F B "spi_write" 1 479 "void(int8 wait,int8 value)" `239 
F N "spi_read" 1 480 ""
F B "spi_read" 1 480 "int8()" `242 
F N "spi_read" 1 481 ""
V L "value" 1 481 "int8" `244 
F B "spi_read" 1 481 "int8(int8 value)" `243 
F N "spi_data_is_in" 1 482 ""
F B "spi_data_is_in" 1 482 "int8()" `245 
F N "setup_spi2" 1 483 ""
V L "mode" 1 483 "int32" `247 
F B "setup_spi2" 1 483 "void(int32 mode)" `246 
F N "spi_write2" 1 484 ""
V L "value" 1 484 "int8" `249 
F B "spi_write2" 1 484 "void(int8 value)" `248 
F N "spi_read2" 1 485 ""
F B "spi_read2" 1 485 "int8()" `250 
F N "spi_read2" 1 486 ""
V L "value" 1 486 "int8" `252 
F B "spi_read2" 1 486 "int8(int8 value)" `251 
F N "spi_data_is_in2" 1 487 ""
F B "spi_data_is_in2" 1 487 "int8()" `253  "Constants used in SETUP_SPI() are:"
D G "SPI_DISABLED" 1 489 "0x00"
D G "SPI_MASTER" 1 490 "0x20"
D G "SPI_SLAVE" 1 491 "0x24"
D G "SPI_SCK_IDLE_HIGH" 1 492 "0x10"
D G "SPI_SCK_IDLE_LOW" 1 493 "0x00"
D G "SPI_CLK_DIV_4" 1 494 "0x00"
D G "SPI_CLK_DIV_16" 1 495 "0x01"
D G "SPI_CLK_DIV_64" 1 496 "0x02"
D G "SPI_CLK_T2" 1 497 "0x03"
D G "SPI_SS_DISABLED" 1 498 "0x01"
D G "SPI_XMIT_L_TO_H" 1 500 "0x4000"
D G "SPI_XMIT_H_TO_L" 1 501 "0x0000"
D G "SPI_SAMPLE_AT_MIDDLE" 1 503 "0x0000"
D G "SPI_SAMPLE_AT_END" 1 504 "0x8000"
D G "SPI_L_TO_H" 1 507 "SPI_SCK_IDLE_LOW"
D G "SPI_H_TO_L" 1 508 "SPI_SCK_IDLE_HIGH"
c L "spi_data_is_in2" 1 1 2 "FUNCTION"
F N "setup_uart" 1 512 ""
V L "baud" 1 512 "int32" `255 
F B "setup_uart" 1 512 "void(int32 baud)" `254 
F N "setup_uart" 1 513 ""
V L "baud" 1 513 "int32" `257 
V L "stream" 1 513 "int8" `258 
F B "setup_uart" 1 513 "void(int32 baud,int8 stream)" `256 
F N "setup_uart" 1 514 ""
V L "baud" 1 514 "int32" `260 
V L "stream" 1 514 "int8" `261 
V L "clock" 1 514 "int32" `262 
F B "setup_uart" 1 514 "void(int32 baud,int8 stream,int32 clock)" `259 
F N "set_uart_speed" 1 515 ""
V L "baud" 1 515 "int32" `264 
F B "set_uart_speed" 1 515 "void(int32 baud)" `263 
F N "set_uart_speed" 1 516 ""
V L "baud" 1 516 "int32" `266 
V L "stream" 1 516 "int8" `267 
F B "set_uart_speed" 1 516 "void(int32 baud,int8 stream)" `265 
F N "set_uart_speed" 1 517 ""
V L "baud" 1 517 "int32" `269 
V L "stream" 1 517 "int8" `270 
V L "clock" 1 517 "int32" `271 
F B "set_uart_speed" 1 517 "void(int32 baud,int8 stream,int32 clock)" `268  "Constants used in setup_uart() are:"
D G "UART_ADDRESS" 1 521 "2"
D G "UART_DATA" 1 522 "4"
D G "UART_AUTODETECT" 1 523 "8"
D G "UART_AUTODETECT_NOWAIT" 1 524 "9"
D G "UART_WAKEUP_ON_RDA" 1 525 "10"
D G "UART_SEND_BREAK" 1 526 "13"
c L "set_uart_speed" 1 1 3 "FUNCTION"
F N "setup_comparator" 1 531 ""
V L "mode" 1 531 "int32" `273 
F B "setup_comparator" 1 531 "void(int32 mode)" `272  "Constants used in setup_comparator() are:"
D G "NC_NC_NC_NC" 1 534 "0x404"
D G "NC_NC" 1 535 "0x404"
D G "CP1_A0_A3" 1 538 "0x000080"
D G "CP1_A1_A3" 1 539 "0x000081"
D G "CP1_B3_A3" 1 540 "0x000082"
D G "CP1_B1_A3" 1 541 "0x000083"
D G "CP1_A0_DAC" 1 542 "0x000084"
D G "CP1_A1_DAC" 1 543 "0x000085"
D G "CP1_B3_DAC" 1 544 "0x000086"
D G "CP1_B1_DAC" 1 545 "0x000087"
D G "CP1_A0_FVR" 1 546 "0x200084"
D G "CP1_A1_FVR" 1 547 "0x200085"
D G "CP1_B3_FVR" 1 548 "0x200086"
D G "CP1_B1_FVR" 1 549 "0x200087"
D G "CP1_OUT_ON_A4" 1 551 "0x000020"
D G "CP1_INVERT" 1 552 "0x000010"
D G "CP1_FAST" 1 553 "0x000008"
D G "CP1_HYST" 1 554 "0x080000"
D G "CP1_SYNC" 1 555 "0x020000"
D G "CP2_A0_A2" 1 558 "0x008000"
D G "CP2_A1_A2" 1 559 "0x008100"
D G "CP2_B3_A2" 1 560 "0x008200"
D G "CP2_B1_A2" 1 561 "0x008300"
D G "CP2_A0_DAC" 1 562 "0x008400"
D G "CP2_A1_DAC" 1 563 "0x008500"
D G "CP2_B3_DAC" 1 564 "0x008600"
D G "CP2_B1_DAC" 1 565 "0x008700"
D G "CP2_A0_FVR" 1 566 "0x108400"
D G "CP2_A1_FVR" 1 567 "0x108500"
D G "CP2_B3_FVR" 1 568 "0x108600"
D G "CP2_B1_FVR" 1 569 "0x108700"
D G "CP2_OUT_ON_A5" 1 571 "0x002000"
D G "CP2_INVERT" 1 572 "0x001000"
D G "CP2_FAST" 1 573 "0x000800"
D G "CP2_HYST" 1 574 "0x040000"
D G "CP2_SYNC" 1 575 "0x010000"
c L "setup_comparator" 1 1 2 "FUNCTION"
F N "setup_vref" 1 582 ""
V L "mode" 1 582 "int8" `277 
F B "setup_vref" 1 582 "void(int8 mode)" `276  "Constants used in setup_vref() are:"
D G "VREF_OFF" 1 584 "0"
D G "VREF_1v024" 1 585 "0x90"
D G "VREF_2v048" 1 586 "0xA0"
D G "VREF_4v096" 1 587 "0xB0"
c L "setup_vref" 1 1 2 "FUNCTION"
F N "setup_low_volt_detect" 1 591 ""
V L "mode" 1 591 "int8" `279 
F B "setup_low_volt_detect" 1 591 "void(int8 mode)" `278  "Constants used in setup_low_volt_detect() are:"
D G "LVD_LVDIN" 1 593 "0x1F"
D G "LVD_47" 1 594 "0x1E"
D G "LVD_43" 1 595 "0x1D"
D G "LVD_41" 1 596 "0x1C"
D G "LVD_38" 1 597 "0x1B"
D G "LVD_36" 1 598 "0x1A"
D G "LVD_34" 1 599 "0x19"
D G "LVD_32" 1 600 "0x18"
D G "LVD_29" 1 601 "0x17"
D G "LVD_28" 1 602 "0x16"
D G "LVD_27" 1 603 "0x15"
D G "LVD_25" 1 604 "0x14"
D G "LVD_24" 1 605 "0x13"
D G "LVD_22" 1 606 "0x12"
D G "LVD_20" 1 607 "0x11"
D G "LVD_18" 1 608 "0x10"
D G "LVD_TRIGGER_BELOW" 1 610 "0"
D G "LVD_TRIGGER_ABOVE" 1 611 "0x80"
c L "setup_low_volt_detect" 1 1 3 "FUNCTION"
F N "setup_dac" 1 616 ""
V L "mode" 1 616 "int8" `281 
F B "setup_dac" 1 616 "void(int8 mode)" `280 
F N "dac_write" 1 617 ""
V L "value" 1 617 "int8" `283 
F B "dac_write" 1 617 "void(int8 value)" `282  "Constants used in SETUP_DAC() are:"
D G "DAC_OFF" 1 619 "0"
D G "DAC_VSS_VDD" 1 620 "0x80"
D G "DAC_VREF_VDD" 1 621 "0x81"
D G "DAC_VSS_VREF" 1 622 "0x84"
D G "DAC_VREF_VREF" 1 623 "0x85"
D G "DAC_VSS_FVR" 1 624 "0x88"
D G "DAC_VREF_FVR" 1 625 "0x89"
D G "DAC_OUTPUT" 1 627 "0x20"
D G "DAC_LVP_POS" 1 628 "0x40"
D G "DAC_LVP_NEG" 1 629 "0"
c L "dac_write" 1 1 2 "FUNCTION"
F N "setup_oscillator" 1 634 ""
V L "mode" 1 634 "int16" `285 
F B "setup_oscillator" 1 634 "int8(int16 mode)" `284 
F N "setup_oscillator" 1 635 ""
V L "mode" 1 635 "int16" `287 
V L "tune" 1 635 "sint8" `288 
F B "setup_oscillator" 1 635 "int8(int16 mode,sint8 tune)" `286  "Constants used in setup_oscillator() are:"
D G "OSC_PLL_ON" 1 637 "0x4000"
D G "OSC_PLL_OFF" 1 638 "0"
D G "OSC_31250" 1 639 "0x8000"
D G "OSC_31KHZ" 1 640 "0x00"
D G "OSC_250KHZ" 1 641 "0x10"
D G "OSC_500KHZ" 1 642 "0x20"
D G "OSC_1MHZ" 1 643 "0x30"
D G "OSC_2MHZ" 1 644 "0x40"
D G "OSC_4MHZ" 1 645 "0x50"
D G "OSC_8MHZ" 1 646 "0x60"
D G "OSC_16MHZ" 1 647 "0x70"
D G "OSC_32MHZ" 1 648 "0x4060"
D G "OSC_64MHZ" 1 649 "0x4070"
D G "OSC_TIMER1" 1 651 "1"
D G "OSC_INTRC" 1 652 "2"
D G "OSC_NORMAL" 1 653 "0"
D G "OSC_IDLE_MODE" 1 655 "0x80"
D G "OSC_STATE_STABLE" 1 659 "4"
D G "OSC_STATE_EXT_RUNNING" 1 660 "8"
c L "setup_oscillator" 1 1 4 "FUNCTION"
F N "setup_adc" 1 667 ""
V L "mode" 1 667 "int16" `290 
F B "setup_adc" 1 667 "void(int16 mode)" `289 
F N "read_adc" 1 668 ""
F B "read_adc" 1 668 "int8()" `291 
F N "read_adc" 1 669 ""
V L "mode" 1 669 "int8" `293 
F B "read_adc" 1 669 "int8(int8 mode)" `292 
F N "read_adc" 1 670 ""
f G "read_adc" 1 670 "int16()" `294 
F N "read_adc" 1 671 ""
V L "mode" 1 671 "int8" `295 
f G "read_adc" 1 671 "int16(int8 mode)" `294 
F N "adc_done" 1 672 ""
F B "adc_done" 1 672 "int8(int8 mode)" `294  "Constants used for SETUP_ADC() are:"
D G "ADC_OFF" 1 674 "0" "ADC Off"
D G "ADC_CLOCK_DIV_2" 1 675 "0x100"
D G "ADC_CLOCK_DIV_4" 1 676 "0x04"
D G "ADC_CLOCK_DIV_8" 1 677 "0x01"
D G "ADC_CLOCK_DIV_16" 1 678 "0x05"
D G "ADC_CLOCK_DIV_32" 1 679 "0x02"
D G "ADC_CLOCK_DIV_64" 1 680 "0x06"
D G "ADC_CLOCK_INTERNAL" 1 681 "0x07" "Internal 2-6us"
D G "ADC_TAD_MUL_0" 1 683 "0x00"
D G "ADC_TAD_MUL_2" 1 684 "0x08"
D G "ADC_TAD_MUL_4" 1 685 "0x10"
D G "ADC_TAD_MUL_6" 1 686 "0x18"
D G "ADC_TAD_MUL_8" 1 687 "0x20"
D G "ADC_TAD_MUL_12" 1 688 "0x28"
D G "ADC_TAD_MUL_16" 1 689 "0x30"
D G "ADC_TAD_MUL_20" 1 690 "0x38"
c L "adc_done" 1 1 1 "FUNCTION"
F N "setup_adc_ports" 1 693 ""
V L "pins" 1 693 "int32" `296 
F B "setup_adc_ports" 1 693 "void(int32 pins)" `295 
F N "setup_adc_ports" 1 694 ""
V L "pins" 1 694 "int32" `298 
V L "reference" 1 694 "int32" `299 
F B "setup_adc_ports" 1 694 "void(int32 pins,int32 reference)" `297 
F N "set_analog_pins" 1 695 ""
V L "pin" 1 695 "int8" `301 
F B "set_analog_pins" 1 695 "void(int8 pin,*int8 _VA_LIST)" `300 
F N "setup_adc_reference" 1 696 ""
V L "reference" 1 696 "int32" `304 
F B "setup_adc_reference" 1 696 "void(int32 reference)" `303 
F N "set_adc_channel" 1 697 ""
V L "channel" 1 697 "int8" `306 
F B "set_adc_channel" 1 697 "void(int8 channel)" `305  "Constants used in SETUP_ADC_PORTS() are:"
D G "sAN0" 1 701 "0x00800000" "| A0"
D G "sAN1" 1 702 "0x01000000" "| A1"
D G "sAN2" 1 703 "0x02000000" "| A2"
D G "sAN3" 1 704 "0x04000000" "| A3"
D G "sAN4" 1 705 "0x08000000" "| A5"
D G "sAN5" 1 706 "0x00100000" "| E0"
D G "sAN6" 1 707 "0x00200000" "| E1"
D G "sAN7" 1 708 "0x00400000" "| E2"
D G "sAN8" 1 709 "0x00010000" "| B2"
D G "sAN9" 1 710 "0x00020000" "| B3"
D G "sAN10" 1 711 "0x00008000" "| B1"
D G "sAN11" 1 712 "0x00040000" "| B4"
D G "sAN12" 1 713 "0x00004000" "| B0"
D G "sAN13" 1 714 "0x00080000" "| B5"
D G "sAN14" 1 715 "0x00000100" "| C2"
D G "sAN15" 1 716 "0x00000200" "| C3"
D G "sAN16" 1 717 "0x00000400" "| C4"
D G "sAN17" 1 718 "0x00000800" "| C5"
D G "sAN18" 1 719 "0x00001000" "| C6"
D G "sAN19" 1 720 "0x00002000" "| C7"
D G "sAN20" 1 721 "0x00000001" "| D0"
D G "sAN21" 1 722 "0x00000002" "| D1"
D G "sAN22" 1 723 "0x00000004" "| D2"
D G "sAN23" 1 724 "0x00000008" "| D3"
D G "sAN24" 1 725 "0x00000010" "| D4"
D G "sAN25" 1 726 "0x00000020" "| D5"
D G "sAN26" 1 727 "0x00000040" "| D6"
D G "sAN27" 1 728 "0x00000080" "| D7"
D G "NO_ANALOGS" 1 729 "0" "None"
D G "ALL_ANALOG" 1 730 "0x0FFFFFFF" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0 B5 C2 C3 C4 C5 C6 C7 D0 D1 D2 D3 D4 D5 D6 D7"
D G "VSS_VDD" 1 733 "0x00000000" "| Range 0-Vdd"
D G "VSS_VREF" 1 734 "0x40000000" "| Range 0-VrefH"
D G "VSS_FVR" 1 735 "0x80000000" "| Range 0-Fvr BUF2"
D G "VREF_VDD" 1 736 "0x10000000" "| Range VrefL-Vdd"
D G "VREF_VREF" 1 737 "0x50000000" "| Range VrefL-VrefH"
D G "VREF_FVR" 1 738 "0x90000000" "| Range VrefL-Fvr BUF2"
D G "CTMU_CHANNEL" 1 742 "0x1D"
D G "DAC_CHANNEL" 1 743 "0x1E"
D G "FVR_CHANNEL" 1 744 "0x1F"
D G "ADC_START_AND_READ" 1 747 "7" "This is the default if nothing is specified"
D G "ADC_START_ONLY" 1 748 "1"
D G "ADC_READ_ONLY" 1 749 "6"
c L "set_adc_channel" 1 1 3 "FUNCTION"
F N "abs" 1 755 ""
V L "x" 1 755 "sint8" `308 
F B "abs" 1 755 "sint8(sint8 x)" `307 
F N "abs" 1 756 ""
V L "x" 1 756 "sint16" `310 
F B "abs" 1 756 "sint16(sint16 x)" `309 
F N "abs" 1 757 ""
V L "x" 1 757 "sint32" `312 
F B "abs" 1 757 "sint32(sint32 x)" `311 
F N "abs" 1 758 ""
V L "x" 1 758 "float" `314 
F B "abs" 1 758 "float(float x)" `313 
F N "_mul" 1 759 ""
V L "??65535" 1 759 "int8" `316 
V L "??65535" 1 759 "int8" `317 
F B "_mul" 1 759 "int16(int8 ,int8 )" `315 
F N "_mul" 1 760 ""
V L "??65535" 1 760 "sint8" `319 
V L "??65535" 1 760 "sint8" `320 
F B "_mul" 1 760 "sint16(sint8 ,sint8 )" `318 
F N "_mul" 1 761 ""
V L "??65535" 1 761 "int16" `322 
V L "??65535" 1 761 "int16" `323 
F B "_mul" 1 761 "int32(int16 ,int16 )" `321 
F N "_mul" 1 762 ""
V L "??65535" 1 762 "sint16" `325 
V L "??65535" 1 762 "sint16" `326 
F B "_mul" 1 762 "sint32(sint16 ,sint16 )" `324  "Memory Manipulation Prototypes:"
F N "read_bank" 1 765 ""
V L "bank" 1 765 "int8" `328 
V L "offset" 1 765 "int8" `329 
F B "read_bank" 1 765 "int8(int8 bank,int8 offset)" `327 
F N "write_bank" 1 766 ""
V L "bank" 1 766 "int8" `331 
V L "offset" 1 766 "int8" `332 
V L "value" 1 766 "int8" `333 
F B "write_bank" 1 766 "void(int8 bank,int8 offset,int8 value)" `330 
F N "strcpy" 1 767 ""
V L "dest" 1 767 "*int8" `335 
V L "src" 1 767 "*int8" `336 
F B "strcpy" 1 767 "void(*int8 dest,*int8 src)" `334 
F N "memset" 1 768 ""
V L "destination" 1 768 "*int8" `338 
V L "value" 1 768 "int8" `339 
V L "num" 1 768 "int16" `340 
F B "memset" 1 768 "void(*int8 destination,int8 value,int16 num)" `337 
F N "memcpy" 1 769 ""
V L "destination" 1 769 "*int8" `342 
V L "source" 1 769 "*int8" `343 
V L "num" 1 769 "int16" `344 
F B "memcpy" 1 769 "void(*int8 destination,*int8 source,int16 num)" `341  "String Prototypes:"
F N "toupper" 1 772 ""
V L "cvalue" 1 772 "int8" `346 
F B "toupper" 1 772 "int8(int8 cvalue)" `345 
F N "tolower" 1 773 ""
V L "cvalue" 1 773 "int8" `348 
F B "tolower" 1 773 "int8(int8 cvalue)" `347 
F N "sprintf" 1 774 ""
V L "string" 1 774 "*int8" `350 
V L "cstring" 1 774 "*int8" `351 
F B "sprintf" 1 774 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `349  "Data Manipulators Prototypes:"
F N "shift_left" 1 777 ""
V L "address" 1 777 "*int8" `354 
V L "bytes" 1 777 "int8" `355 
V L "value" 1 777 "int8" `356 
F B "shift_left" 1 777 "int8(*int8 address,int8 bytes,int8 value)" `353 
F N "shift_right" 1 778 ""
V L "address" 1 778 "*int8" `358 
V L "bytes" 1 778 "int8" `359 
V L "value" 1 778 "int8" `360 
F B "shift_right" 1 778 "int8(*int8 address,int8 bytes,int8 value)" `357 
F N "rotate_left" 1 779 ""
V L "address" 1 779 "*int8" `362 
V L "bytes" 1 779 "int8" `363 
F B "rotate_left" 1 779 "void(*int8 address,int8 bytes)" `361 
F N "rotate_right" 1 780 ""
V L "address" 1 780 "*int8" `365 
V L "bytes" 1 780 "int8" `366 
F B "rotate_right" 1 780 "void(*int8 address,int8 bytes)" `364 
F N "swap" 1 781 ""
V L "value" 1 781 "int8" `368 
F B "swap" 1 781 "void(int8 value)" `367 
F N "make8" 1 782 ""
V L "var" 1 782 "int16" `370 
V L "offset" 1 782 "int8" `371 
F B "make8" 1 782 "int8(int16 var,int8 offset)" `369 
F N "make8" 1 783 ""
V L "var" 1 783 "int32" `373 
V L "offset" 1 783 "int8" `374 
F B "make8" 1 783 "int8(int32 var,int8 offset)" `372 
F N "make16" 1 784 ""
V L "varhigh" 1 784 "int8" `376 
V L "varlow" 1 784 "int8" `377 
F B "make16" 1 784 "int16(int8 varhigh,int8 varlow)" `375 
F N "make32" 1 785 ""
V L "var1" 1 785 "int16" `379 
F B "make32" 1 785 "int32(int16 var1)" `378 
F N "make32" 1 786 ""
V L "var1" 1 786 "int16" `381 
V L "var2" 1 786 "int16" `382 
F B "make32" 1 786 "int32(int16 var1,int16 var2)" `380 
F N "make32" 1 787 ""
V L "var1" 1 787 "int16" `384 
V L "var2" 1 787 "int8" `385 
F B "make32" 1 787 "int32(int16 var1,int8 var2)" `383 
F N "make32" 1 788 ""
V L "var1" 1 788 "int16" `387 
V L "var2" 1 788 "int8" `388 
V L "var3" 1 788 "int8" `389 
F B "make32" 1 788 "int32(int16 var1,int8 var2,int8 var3)" `386 
F N "make32" 1 789 ""
V L "var1" 1 789 "int8" `391 
F B "make32" 1 789 "int32(int8 var1)" `390 
F N "make32" 1 790 ""
V L "var1" 1 790 "int8" `393 
V L "var2" 1 790 "int8" `394 
F B "make32" 1 790 "int32(int8 var1,int8 var2)" `392 
F N "make32" 1 791 ""
V L "var1" 1 791 "int8" `396 
V L "var2" 1 791 "int8" `397 
V L "var3" 1 791 "int8" `398 
F B "make32" 1 791 "int32(int8 var1,int8 var2,int8 var3)" `395 
F N "make32" 1 792 ""
V L "var1" 1 792 "int8" `400 
V L "var2" 1 792 "int8" `401 
V L "var3" 1 792 "int8" `402 
V L "var4" 1 792 "int8" `403 
F B "make32" 1 792 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `399 
F N "make32" 1 793 ""
V L "var1" 1 793 "int8" `405 
V L "var2" 1 793 "int16" `406 
F B "make32" 1 793 "int32(int8 var1,int16 var2)" `404 
F N "make32" 1 794 ""
V L "var1" 1 794 "int8" `408 
V L "var2" 1 794 "int16" `409 
V L "var3" 1 794 "int8" `410 
F B "make32" 1 794 "int32(int8 var1,int16 var2,int8 var3)" `407 
F N "make32" 1 795 ""
V L "var1" 1 795 "int8" `412 
V L "var2" 1 795 "int8" `413 
V L "var3" 1 795 "int16" `414 
F B "make32" 1 795 "int32(int8 var1,int8 var2,int16 var3)" `411 
F N "bit_set" 1 796 ""
V L "var" 1 796 "int8" `416 
V L "bit" 1 796 "int8" `417 
F B "bit_set" 1 796 "void(int8 var,int8 bit)" `415 
F N "bit_set" 1 797 ""
V L "var" 1 797 "int16" `419 
V L "bit" 1 797 "int8" `420 
F B "bit_set" 1 797 "void(int16 var,int8 bit)" `418 
F N "bit_set" 1 798 ""
V L "var" 1 798 "int32" `422 
V L "bit" 1 798 "int8" `423 
F B "bit_set" 1 798 "void(int32 var,int8 bit)" `421 
F N "bit_clear" 1 799 ""
V L "var" 1 799 "int8" `425 
V L "bit" 1 799 "int8" `426 
F B "bit_clear" 1 799 "void(int8 var,int8 bit)" `424 
F N "bit_clear" 1 800 ""
V L "var" 1 800 "int16" `428 
V L "bit" 1 800 "int8" `429 
F B "bit_clear" 1 800 "void(int16 var,int8 bit)" `427 
F N "bit_clear" 1 801 ""
V L "var" 1 801 "int32" `431 
V L "bit" 1 801 "int8" `432 
F B "bit_clear" 1 801 "void(int32 var,int8 bit)" `430 
F N "bit_test" 1 802 ""
V L "var" 1 802 "int8" `434 
V L "bit" 1 802 "int8" `435 
F B "bit_test" 1 802 "int8(int8 var,int8 bit)" `433 
F N "bit_test" 1 803 ""
V L "var" 1 803 "int16" `437 
V L "bit" 1 803 "int8" `438 
F B "bit_test" 1 803 "int8(int16 var,int8 bit)" `436 
F N "bit_test" 1 804 ""
V L "var" 1 804 "int32" `440 
V L "bit" 1 804 "int8" `441 
F B "bit_test" 1 804 "int8(int32 var,int8 bit)" `439  "#use delay() Prototypes:"
F N "delay_cycles" 1 807 ""
V L "count" 1 807 "int8" `443 
F B "delay_cycles" 1 807 "void(int8 count)" `442 
F N "delay_ms" 1 808 ""
V L "time" 1 808 "int16" `445 
F B "delay_ms" 1 808 "void(int16 time)" `444 
F N "delay_us" 1 809 ""
V L "time" 1 809 "int16" `447 
F B "delay_us" 1 809 "void(int16 time)" `446  "#use rs232() Prototypes:"
F N "putchar" 1 812 ""
V L "cdata" 1 812 "int8" `449 
F B "putchar" 1 812 "void(int8 cdata)" `448 
F N "putchar" 1 813 ""
V L "cdata" 1 813 "int8" `451 
V L "stream" 1 813 "int8" `452 
F B "putchar" 1 813 "void(int8 cdata,int8 stream)" `450 
F N "puts" 1 814 ""
V L "string" 1 814 "*int8" `454 
F B "puts" 1 814 "void(*int8 string)" `453 
F N "puts" 1 815 ""
V L "string" 1 815 "*int8" `456 
V L "stream" 1 815 "int8" `457 
F B "puts" 1 815 "void(*int8 string,int8 stream)" `455 
F N "getch" 1 816 ""
F B "getch" 1 816 "int8()" `458 
F N "getch" 1 817 ""
V L "stream" 1 817 "int8" `460 
F B "getch" 1 817 "int8(int8 stream)" `459 
F N "gets" 1 818 ""
V L "string" 1 818 "*int8" `462 
F B "gets" 1 818 "void(*int8 string)" `461 
F N "gets" 1 819 ""
V L "string" 1 819 "*int8" `464 
V L "stream" 1 819 "int8" `465 
F B "gets" 1 819 "void(*int8 string,int8 stream)" `463 
F N "kbhit" 1 820 ""
F B "kbhit" 1 820 "int8()" `466 
F N "kbhit" 1 821 ""
V L "stream" 1 821 "int8" `468 
F B "kbhit" 1 821 "int8(int8 stream)" `467 
F N "printf" 1 822 ""
V L "string" 1 822 "*int8" `470 
F B "printf" 1 822 "void(*int8 string,*int8 _VA_LIST)" `469 
F N "fprintf" 1 823 ""
V L "stream" 1 823 "int8" `473 
V L "string" 1 823 "*int8" `474 
F B "fprintf" 1 823 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `472 
F N "putc_send" 1 824 ""
F B "putc_send" 1 824 "void()" `476 
F N "fputc_send" 1 825 ""
V L "stream" 1 825 "int8" `478 
F B "fputc_send" 1 825 "void(int8 stream)" `477 
F N "rcv_buffer_full" 1 826 ""
F B "rcv_buffer_full" 1 826 "int8()" `479 
F N "rcv_buffer_full" 1 827 ""
V L "stream" 1 827 "int8" `481 
F B "rcv_buffer_full" 1 827 "int8(int8 stream)" `480 
F N "rcv_buffer_bytes" 1 828 ""
F B "rcv_buffer_bytes" 1 828 "int16()" `482 
F N "rcv_buffer_bytes" 1 829 ""
V L "stream" 1 829 "int8" `484 
F B "rcv_buffer_bytes" 1 829 "int16(int8 stream)" `483 
F N "tx_buffer_full" 1 830 ""
F B "tx_buffer_full" 1 830 "int8()" `485 
F N "tx_buffer_full" 1 831 ""
V L "stream" 1 831 "int8" `487 
F B "tx_buffer_full" 1 831 "int8(int8 stream)" `486 
F N "tx_buffer_bytes" 1 832 ""
F B "tx_buffer_bytes" 1 832 "int16()" `488 
F N "tx_buffer_bytes" 1 833 ""
V L "stream" 1 833 "int8" `490 
F B "tx_buffer_bytes" 1 833 "int16(int8 stream)" `489 
F N "linbus_header" 1 834 ""
V L "identifier" 1 834 "int8" `492 
F B "linbus_header" 1 834 "int8(int8 identifier)" `491 
F N "linbus_header" 1 835 ""
V L "stream" 1 835 "int8" `494 
V L "identifier" 1 835 "int8" `495 
F B "linbus_header" 1 835 "int8(int8 stream,int8 identifier)" `493 
F N "linbus_header_hit" 1 836 ""
F B "linbus_header_hit" 1 836 "int8()" `496 
F N "linbus_header_hit" 1 837 ""
V L "stream" 1 837 "int8" `498 
F B "linbus_header_hit" 1 837 "int8(int8 stream)" `497 
F N "linbus_header_get" 1 838 ""
F B "linbus_header_get" 1 838 "int8()" `499 
F N "linbus_header_get" 1 839 ""
V L "stream" 1 839 "int8" `501 
F B "linbus_header_get" 1 839 "int8(int8 stream)" `500 
F N "linbus_rx_response" 1 840 ""
V L "DataPtr" 1 840 "*int8" `503 
V L "count" 1 840 "int8" `504 
F B "linbus_rx_response" 1 840 "int8(*int8 DataPtr,int8 count)" `502 
F N "linbus_rx_response" 1 841 ""
V L "stream" 1 841 "int8" `506 
V L "DataPtr" 1 841 "*int8" `507 
V L "count" 1 841 "int8" `508 
F B "linbus_rx_response" 1 841 "int8(int8 stream,*int8 DataPtr,int8 count)" `505 
F N "linbus_tx_response" 1 842 ""
V L "DataPtr" 1 842 "*int8" `510 
V L "count" 1 842 "int8" `511 
F B "linbus_tx_response" 1 842 "void(*int8 DataPtr,int8 count)" `509 
F N "linbus_tx_response" 1 843 ""
V L "stream" 1 843 "int8" `513 
V L "DataPtr" 1 843 "*int8" `514 
V L "count" 1 843 "int8" `515 
F B "linbus_tx_response" 1 843 "void(int8 stream,*int8 DataPtr,int8 count)" `512 
F N "linbus_checksum_type" 1 844 ""
V L "type" 1 844 "int8" `517 
F B "linbus_checksum_type" 1 844 "void(int8 type)" `516 
F N "linbus_checksum_type" 1 845 ""
V L "stream" 1 845 "int8" `519 
V L "type" 1 845 "int8" `520 
F B "linbus_checksum_type" 1 845 "void(int8 stream,int8 type)" `518  "#use i2c() Prototypes:"
F N "i2c_read" 1 848 ""
F B "i2c_read" 1 848 "int8()" `521 
F N "i2c_read" 1 849 ""
V L "ack" 1 849 "int8" `523 
F B "i2c_read" 1 849 "int8(int8 ack)" `522 
F N "i2c_read" 1 850 ""
V L "stream" 1 850 "int8" `525 
V L "ack" 1 850 "int8" `526 
F B "i2c_read" 1 850 "int8(int8 stream,int8 ack)" `524 
F N "i2c_write" 1 851 ""
V L "data" 1 851 "int8" `528 
F B "i2c_write" 1 851 "int8(int8 data)" `527 
F N "i2c_write" 1 852 ""
V L "stream" 1 852 "int8" `530 
V L "data" 1 852 "int8" `531 
F B "i2c_write" 1 852 "int8(int8 stream,int8 data)" `529 
F N "i2c_start" 1 853 ""
F B "i2c_start" 1 853 "void()" `532 
F N "i2c_start" 1 854 ""
V L "stream" 1 854 "int8" `534 
F B "i2c_start" 1 854 "void(int8 stream)" `533 
F N "i2c_start" 1 855 ""
V L "stream" 1 855 "int8" `536 
V L "restart" 1 855 "int8" `537 
F B "i2c_start" 1 855 "void(int8 stream,int8 restart)" `535 
F N "i2c_stop" 1 856 ""
F B "i2c_stop" 1 856 "void()" `538 
F N "i2c_stop" 1 857 ""
V L "stream" 1 857 "int8" `540 
F B "i2c_stop" 1 857 "void(int8 stream)" `539 
F N "i2c_isr_state" 1 858 ""
F B "i2c_isr_state" 1 858 "int8()" `541 
F N "i2c_slaveaddr" 1 859 ""
V L "addr" 1 859 "int8" `543 
F B "i2c_slaveaddr" 1 859 "void(int8 addr)" `542 
F N "i2c_slaveaddr" 1 860 ""
V L "stream" 1 860 "int8" `545 
V L "addr" 1 860 "int8" `546 
F B "i2c_slaveaddr" 1 860 "void(int8 stream,int8 addr)" `544 
F N "i2c_poll" 1 861 ""
F B "i2c_poll" 1 861 "int8()" `547 
F N "i2c_poll" 1 862 ""
V L "stream" 1 862 "int8" `549 
F B "i2c_poll" 1 862 "int8(int8 stream)" `548 
F N "i2c_init" 1 863 ""
V L "baud" 1 863 "int32" `551 
F B "i2c_init" 1 863 "void(int32 baud)" `550 
F N "i2c_init" 1 864 ""
V L "stream" 1 864 "int8" `553 
V L "baud" 1 864 "int32" `554 
F B "i2c_init" 1 864 "void(int8 stream,int32 baud)" `552 
F N "i2c_transfer" 1 865 ""
V L "address" 1 865 "int8" `556 
V L "wData" 1 865 "*int8" `557 
V L "wCount" 1 865 "int8" `558 
F B "i2c_transfer" 1 865 "int8(int8 address,*int8 wData,int8 wCount)" `555 
F N "i2c_transfer" 1 866 ""
V L "address" 1 866 "int8" `560 
V L "wData" 1 866 "*int8" `561 
V L "wCount" 1 866 "int8" `562 
V L "rData" 1 866 "*int8" `563 
V L "rCount" 1 866 "*int8" `564 
F B "i2c_transfer" 1 866 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `559 
F N "i2c_transfer" 1 867 ""
V L "stream" 1 867 "int8" `566 
V L "address" 1 867 "int8" `567 
V L "wData" 1 867 "*int8" `568 
V L "wCount" 1 867 "int8" `569 
F B "i2c_transfer" 1 867 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `565 
F N "i2c_transfer" 1 868 ""
V L "stream" 1 868 "int8" `571 
V L "address" 1 868 "int8" `572 
V L "wData" 1 868 "*int8" `573 
V L "wCount" 1 868 "int8" `574 
V L "rData" 1 868 "*int8" `575 
V L "rCount" 1 868 "*int8" `576 
F B "i2c_transfer" 1 868 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `570 
F N "i2c_transfer_out" 1 869 ""
V L "address" 1 869 "int8" `578 
V L "wData" 1 869 "*int8" `579 
V L "wCount" 1 869 "int8" `580 
F B "i2c_transfer_out" 1 869 "int8(int8 address,*int8 wData,int8 wCount)" `577 
F N "i2c_transfer_out" 1 870 ""
V L "stream" 1 870 "int8" `582 
V L "address" 1 870 "int8" `583 
V L "wData" 1 870 "*int8" `584 
V L "wCount" 1 870 "int8" `585 
F B "i2c_transfer_out" 1 870 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `581 
F N "i2c_transfer_in" 1 871 ""
V L "address" 1 871 "int8" `587 
V L "rData" 1 871 "*int8" `588 
V L "rCount" 1 871 "int8" `589 
F B "i2c_transfer_in" 1 871 "int8(int8 address,*int8 rData,int8 rCount)" `586 
F N "i2c_transfer_in" 1 872 ""
V L "stream" 1 872 "int8" `591 
V L "address" 1 872 "int8" `592 
V L "rData" 1 872 "*int8" `593 
V L "rCount" 1 872 "int8" `594 
F B "i2c_transfer_in" 1 872 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `590  "#use spi() Prototypes:"
F N "spi_xfer" 1 875 ""
F B "spi_xfer" 1 875 "int8()" `595 
F N "spi_xfer" 1 876 ""
f G "spi_xfer" 1 876 "int16()" `596 
F N "spi_xfer" 1 877 ""
f G "spi_xfer" 1 877 "int32()" `596 
F N "spi_xfer" 1 878 ""
V L "data" 1 878 "int8" `597 
F B "spi_xfer" 1 878 "int8(int8 data)" `596 
F N "spi_xfer" 1 879 ""
V L "data" 1 879 "int16" `599 
F B "spi_xfer" 1 879 "int16(int16 data)" `598 
F N "spi_xfer" 1 880 ""
V L "data" 1 880 "int32" `601 
F B "spi_xfer" 1 880 "int32(int32 data)" `600 
F N "spi_xfer" 1 881 ""
V L "stream" 1 881 "int8" `603 
V L "data" 1 881 "int8" `604 
F B "spi_xfer" 1 881 "int8(int8 stream,int8 data)" `602 
F N "spi_xfer" 1 882 ""
V L "stream" 1 882 "int8" `606 
V L "data" 1 882 "int16" `607 
F B "spi_xfer" 1 882 "int16(int8 stream,int16 data)" `605 
F N "spi_xfer" 1 883 ""
V L "stream" 1 883 "int8" `609 
V L "data" 1 883 "int32" `610 
F B "spi_xfer" 1 883 "int32(int8 stream,int32 data)" `608 
F N "spi_xfer" 1 884 ""
V L "stream" 1 884 "int8" `612 
V L "data" 1 884 "int8" `613 
V L "bits" 1 884 "int8" `614 
F B "spi_xfer" 1 884 "int8(int8 stream,int8 data,int8 bits)" `611 
F N "spi_xfer" 1 885 ""
V L "stream" 1 885 "int8" `616 
V L "data" 1 885 "int16" `617 
V L "bits" 1 885 "int8" `618 
F B "spi_xfer" 1 885 "int16(int8 stream,int16 data,int8 bits)" `615 
F N "spi_xfer" 1 886 ""
V L "stream" 1 886 "int8" `620 
V L "data" 1 886 "int32" `621 
V L "bits" 1 886 "int8" `622 
F B "spi_xfer" 1 886 "int32(int8 stream,int32 data,int8 bits)" `619 
F N "spi_init" 1 887 ""
V L "baud" 1 887 "int32" `624 
F B "spi_init" 1 887 "void(int32 baud)" `623 
F N "spi_init" 1 888 ""
V L "stream" 1 888 "int8" `626 
V L "baud" 1 888 "int32" `627 
F B "spi_init" 1 888 "void(int8 stream,int32 baud)" `625 
F N "spi_speed" 1 889 ""
V L "baud" 1 889 "int32" `629 
F B "spi_speed" 1 889 "void(int32 baud)" `628 
F N "spi_speed" 1 890 ""
V L "stream" 1 890 "int8" `631 
V L "baud" 1 890 "int32" `632 
F B "spi_speed" 1 890 "void(int8 stream,int32 baud)" `630 
F N "spi_speed" 1 891 ""
V L "stream" 1 891 "int8" `634 
V L "baud" 1 891 "int32" `635 
V L "clock" 1 891 "int32" `636 
F B "spi_speed" 1 891 "void(int8 stream,int32 baud,int32 clock)" `633 
F N "spi_prewrite" 1 892 ""
V L "data" 1 892 "int8" `638 
F B "spi_prewrite" 1 892 "void(int8 data)" `637 
F N "spi_prewrite" 1 893 ""
V L "data" 1 893 "int16" `640 
F B "spi_prewrite" 1 893 "void(int16 data)" `639 
F N "spi_prewrite" 1 894 ""
V L "data" 1 894 "int32" `642 
F B "spi_prewrite" 1 894 "void(int32 data)" `641 
F N "spi_prewrite" 1 895 ""
V L "??65535" 1 895 "int8" `644 
V L "data" 1 895 "int8" `645 
F B "spi_prewrite" 1 895 "void(int8 ,int8 data)" `643 
F N "spi_prewrite" 1 896 ""
V L "??65535" 1 896 "int8" `647 
V L "data" 1 896 "int16" `648 
F B "spi_prewrite" 1 896 "void(int8 ,int16 data)" `646 
F N "spi_prewrite" 1 897 ""
V L "??65535" 1 897 "int8" `650 
V L "data" 1 897 "int32" `651 
F B "spi_prewrite" 1 897 "void(int8 ,int32 data)" `649 
F N "spi_xfer_in" 1 898 ""
F B "spi_xfer_in" 1 898 "int8()" `652 
F N "spi_xfer_in" 1 899 ""
f G "spi_xfer_in" 1 899 "int16()" `653 
F N "spi_xfer_in" 1 900 ""
f G "spi_xfer_in" 1 900 "int32()" `653 
F N "spi_xfer_in" 1 901 ""
V L "bits" 1 901 "int8" `654 
F B "spi_xfer_in" 1 901 "int8(int8 bits)" `653 
F N "spi_xfer_in" 1 902 ""
V L "bits" 1 902 "int8" `656 
f G "spi_xfer_in" 1 902 "int16(int8 bits)" `655 
F N "spi_xfer_in" 1 903 ""
V L "bits" 1 903 "int8" `656 
f G "spi_xfer_in" 1 903 "int32(int8 bits)" `655 
F N "spi_xfer_in" 1 904 ""
V L "stream" 1 904 "int8" `656 
V L "bits" 1 904 "int8" `657 
F B "spi_xfer_in" 1 904 "int8(int8 stream,int8 bits)" `655 
F N "spi_xfer_in" 1 905 ""
V L "stream" 1 905 "int8" `656 
V L "bits" 1 905 "int8" `660 
f G "spi_xfer_in" 1 905 "int16(int8 stream,int8 bits)" `658 
F N "spi_xfer_in" 1 906 ""
V L "stream" 1 906 "int8" `656 
V L "bits" 1 906 "int8" `660 
f G "spi_xfer_in" 1 906 "int32(int8 stream,int8 bits)" `658 
F N "spi_transfer" 1 907 ""
V L "wData" 1 907 "*int8" `659 
V L "rData" 1 907 "*int8" `660 
V L "count" 1 907 "int16" `661 
F B "spi_transfer" 1 907 "void(*int8 wData,*int8 rData,int16 count)" `658 
F N "spi_transfer" 1 908 ""
V L "stream" 1 908 "int8" `663 
V L "wData" 1 908 "*int8" `664 
V L "rData" 1 908 "*int8" `665 
V L "count" 1 908 "int16" `666 
F B "spi_transfer" 1 908 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `662 
F N "spi_transfer_write" 1 909 ""
V L "wData" 1 909 "*int8" `668 
V L "count" 1 909 "int16" `669 
F B "spi_transfer_write" 1 909 "void(*int8 wData,int16 count)" `667 
F N "spi_transfer_write" 1 910 ""
V L "stream" 1 910 "int8" `671 
V L "wData" 1 910 "*int8" `672 
V L "count" 1 910 "int16" `673 
F B "spi_transfer_write" 1 910 "void(int8 stream,*int8 wData,int16 count)" `670 
F N "spi_transfer_read" 1 911 ""
V L "rData" 1 911 "*int8" `675 
V L "count" 1 911 "int16" `676 
F B "spi_transfer_read" 1 911 "void(*int8 rData,int16 count)" `674 
F N "spi_transfer_read" 1 912 ""
V L "stream" 1 912 "int8" `678 
V L "rData" 1 912 "*int8" `679 
V L "count" 1 912 "int16" `680 
F B "spi_transfer_read" 1 912 "void(int8 stream,*int8 rData,int16 count)" `677  "#use rtos() Prototypes:"
F N "rtos_run" 1 915 ""
F B "rtos_run" 1 915 "void()" `681 
F N "rtos_yield" 1 916 ""
F B "rtos_yield" 1 916 "void()" `682 
F N "rtos_enable" 1 917 ""
V L "task" 1 917 "int8" `684 
F B "rtos_enable" 1 917 "void(int8 task)" `683 
F N "rtos_disable" 1 918 ""
V L "task" 1 918 "int8" `686 
F B "rtos_disable" 1 918 "void(int8 task)" `685 
F N "rtos_terminate" 1 919 ""
F B "rtos_terminate" 1 919 "void()" `687 
F N "rtos_await" 1 920 ""
V L "flag" 1 920 "int8" `689 
F B "rtos_await" 1 920 "void(int8 flag)" `688 
F N "rtos_wait" 1 921 ""
V L "sem" 1 921 "int8" `691 
F B "rtos_wait" 1 921 "void(int8 sem)" `690 
F N "rtos_signal" 1 922 ""
V L "sem" 1 922 "int8" `693 
F B "rtos_signal" 1 922 "void(int8 sem)" `692 
F N "rtos_msg_send" 1 923 ""
V L "task" 1 923 "int8" `695 
V L "msg" 1 923 "int8" `696 
F B "rtos_msg_send" 1 923 "void(int8 task,int8 msg)" `694 
F N "rtos_msg_read" 1 924 ""
F B "rtos_msg_read" 1 924 "int8()" `697 
F N "rtos_msg_poll" 1 925 ""
F B "rtos_msg_poll" 1 925 "int8()" `698 
F N "rtos_overrun" 1 926 ""
V L "task" 1 926 "int8" `700 
F B "rtos_overrun" 1 926 "int8(int8 task)" `699 
F N "rtos_stats" 1 927 ""
V L "task" 1 927 "int8" `702 
V L "stat" 1 927 "*int8" `703 
F B "rtos_stats" 1 927 "void(int8 task,*int8 stat)" `701  "#use timer() Prototypes:"
F N "get_ticks" 1 930 ""
F B "get_ticks" 1 930 "int8()" `704 
F N "get_ticks" 1 931 ""
f G "get_ticks" 1 931 "int16()" `705 
F N "get_ticks" 1 932 ""
f G "get_ticks" 1 932 "int32()" `705 
F N "get_ticks" 1 933 ""
V L "stream" 1 933 "int8" `706 
F B "get_ticks" 1 933 "int8(int8 stream)" `705 
F N "get_ticks" 1 934 ""
V L "stream" 1 934 "int8" `708 
f G "get_ticks" 1 934 "int16(int8 stream)" `707 
F N "get_ticks" 1 935 ""
V L "stream" 1 935 "int8" `708 
f G "get_ticks" 1 935 "int32(int8 stream)" `707 
F N "set_ticks" 1 936 ""
V L "value" 1 936 "int8" `708 
F B "set_ticks" 1 936 "void(int8 value)" `707 
F N "set_ticks" 1 937 ""
V L "value" 1 937 "int16" `710 
F B "set_ticks" 1 937 "void(int16 value)" `709 
F N "set_ticks" 1 938 ""
V L "value" 1 938 "int32" `712 
F B "set_ticks" 1 938 "void(int32 value)" `711 
F N "set_ticks" 1 939 ""
V L "stream" 1 939 "int8" `714 
V L "value" 1 939 "int8" `715 
F B "set_ticks" 1 939 "void(int8 stream,int8 value)" `713 
F N "set_ticks" 1 940 ""
V L "stream" 1 940 "int8" `717 
V L "value" 1 940 "int16" `718 
F B "set_ticks" 1 940 "void(int8 stream,int16 value)" `716 
F N "set_ticks" 1 941 ""
V L "stream" 1 941 "int8" `720 
V L "value" 1 941 "int32" `721 
F B "set_ticks" 1 941 "void(int8 stream,int32 value)" `719  "#use pwm() Prototypes:"
F N "pwm_on" 1 944 ""
F B "pwm_on" 1 944 "void()" `722 
F N "pwm_on" 1 945 ""
V L "stream" 1 945 "int8" `724 
F B "pwm_on" 1 945 "void(int8 stream)" `723 
F N "pwm_off" 1 946 ""
F B "pwm_off" 1 946 "void()" `725 
F N "pwm_off" 1 947 ""
V L "stream" 1 947 "int8" `727 
F B "pwm_off" 1 947 "void(int8 stream)" `726 
F N "pwm_set_duty" 1 948 ""
V L "duty" 1 948 "int16" `729 
F B "pwm_set_duty" 1 948 "void(int16 duty)" `728 
F N "pwm_set_duty" 1 949 ""
V L "stream" 1 949 "int8" `731 
V L "duty" 1 949 "int16" `732 
F B "pwm_set_duty" 1 949 "void(int8 stream,int16 duty)" `730 
F N "pwm_set_duty_percent" 1 950 ""
V L "percent" 1 950 "int16" `734 
F B "pwm_set_duty_percent" 1 950 "void(int16 percent)" `733 
F N "pwm_set_duty_percent" 1 951 ""
V L "stream" 1 951 "int8" `736 
V L "percent" 1 951 "int16" `737 
F B "pwm_set_duty_percent" 1 951 "void(int8 stream,int16 percent)" `735 
F N "pwm_set_frequency" 1 952 ""
V L "frequency" 1 952 "int32" `739 
F B "pwm_set_frequency" 1 952 "void(int32 frequency)" `738 
F N "pwm_set_frequency" 1 953 ""
V L "stream" 1 953 "int8" `741 
V L "frequency" 1 953 "int32" `742 
F B "pwm_set_frequency" 1 953 "void(int8 stream,int32 frequency)" `740 
F N "pwm_get_duty_period" 1 954 ""
F B "pwm_get_duty_period" 1 954 "int16()" `743 
F N "pwm_get_duty_period" 1 955 ""
V L "stream" 1 955 "int8" `745 
F B "pwm_get_duty_period" 1 955 "int16(int8 stream)" `744  "#use capture() Prototypes:"
F N "get_capture_time" 1 958 ""
F B "get_capture_time" 1 958 "int16()" `746 
F N "get_capture_time" 1 959 ""
V L "stream" 1 959 "int8" `748 
F B "get_capture_time" 1 959 "int16(int8 stream)" `747 
F N "get_capture_event" 1 960 ""
F B "get_capture_event" 1 960 "int8()" `749 
F N "get_capture_event" 1 961 ""
V L "stream" 1 961 "int8" `751 
F B "get_capture_event" 1 961 "int8(int8 stream)" `750  "Enviroment Prototypes:"
c L "get_capture_event" 1 1 2 "FUNCTION"
F N "goto_address" 1 974 ""
V L "address" 1 974 "int32" `753 
F B "goto_address" 1 974 "void(int32 address)" `752 
F N "label_address" 1 975 ""
V L "label" 1 975 "int32" `755 
F B "label_address" 1 975 "int32(int32 label)" `754  "Program Memory Read Prototypes:"
F N "read_program_memory" 1 978 ""
V L "address" 1 978 "int32" `757 
V L "DataPtr" 1 978 "*int8" `758 
V L "count" 1 978 "int16" `759 
F B "read_program_memory" 1 978 "void(int32 address,*int8 DataPtr,int16 count)" `756 
F N "read_program_eeprom" 1 979 ""
V L "address" 1 979 "int32" `761 
F B "read_program_eeprom" 1 979 "int16(int32 address)" `760  "Program Memory Write Prototypes:"
F N "write_program_memory" 1 982 ""
V L "address" 1 982 "int32" `763 
V L "DataPtr" 1 982 "*int8" `764 
V L "count" 1 982 "int16" `765 
F B "write_program_memory" 1 982 "void(int32 address,*int8 DataPtr,int16 count)" `762 
F N "write_program_eeprom" 1 983 ""
V L "address" 1 983 "int32" `767 
V L "data" 1 983 "int16" `768 
F B "write_program_eeprom" 1 983 "void(int32 address,int16 data)" `766  "EEPROM Prototypes:"
D G "__EEADDRESS__" 1 988 "unsigned int16"
F N "read_eeprom" 1 993 ""
V L "address" 1 993 "int16" `770 
F B "read_eeprom" 1 993 "int8(int16 address)" `769 
F N "write_eeprom" 1 994 ""
V L "address" 1 994 "int16" `772 
V L "value" 1 994 "int8" `773 
F B "write_eeprom" 1 994 "void(int16 address,int8 value)" `771  "#use touchpad() Prototypes:"
F N "touchpad_state" 1 997 ""
V L "state" 1 997 "int8" `775 
F B "touchpad_state" 1 997 "void(int8 state)" `774 
F N "touchpad_getc" 1 998 ""
F B "touchpad_getc" 1 998 "int8()" `776 
F N "touchpad_hit" 1 999 ""
F B "touchpad_hit" 1 999 "int8()" `777  "INT"
c L "touchpad_hit" 1 1 4 "FUNCTION"
F N "enable_interrupts" 1 1005 ""
V L "interrupt" 1 1005 "int32" `779 
F B "enable_interrupts" 1 1005 "void(int32 interrupt)" `778 
F N "disable_interrupts" 1 1006 ""
V L "interrupt" 1 1006 "int32" `781 
F B "disable_interrupts" 1 1006 "void(int32 interrupt)" `780 
F N "clear_interrupt" 1 1007 ""
V L "interrupt" 1 1007 "int32" `783 
F B "clear_interrupt" 1 1007 "void(int32 interrupt)" `782 
F N "interrupt_active" 1 1008 ""
V L "interrupt" 1 1008 "int32" `785 
F B "interrupt_active" 1 1008 "int8(int32 interrupt)" `784 
F N "interrupt_enabled" 1 1009 ""
V L "interrupt" 1 1009 "int32" `787 
F B "interrupt_enabled" 1 1009 "int8(int32 interrupt)" `786 
F N "ext_int_edge" 1 1010 ""
V L "source" 1 1010 "int8" `789 
V L "edge" 1 1010 "int8" `790 
F B "ext_int_edge" 1 1010 "void(int8 source,int8 edge)" `788 
F N "jump_to_isr" 1 1011 ""
V L "address" 1 1011 "int16" `792 
F B "jump_to_isr" 1 1011 "void(int16 address)" `791  "Constants used in EXT_INT_EDGE() are:"
D G "L_TO_H" 1 1013 "0x40"
D G "H_TO_L" 1 1014 "0"
D G "GLOBAL" 1 1016 "0xF2C0"
D G "PERIPH" 1 1017 "0xF240"
D G "INT_RTCC" 1 1018 "0x00F220"
D G "INT_TIMER0" 1 1019 "0x00F220"
D G "INT_TIMER1" 1 1020 "0x009D01"
D G "INT_TIMER2" 1 1021 "0x009D02"
D G "INT_TIMER3" 1 1022 "0x00A002"
D G "INT_EXT_L2H" 1 1023 "0x5000F210"
D G "INT_EXT_H2L" 1 1024 "0x6000F210"
D G "INT_EXT" 1 1025 "0x00F210"
D G "INT_EXT1_L2H" 1 1026 "0x5001F008"
D G "INT_EXT1_H2L" 1 1027 "0x6001F008"
D G "INT_EXT1" 1 1028 "0x00F008"
D G "INT_EXT2_L2H" 1 1029 "0x5002F010"
D G "INT_EXT2_H2L" 1 1030 "0x6002F010"
D G "INT_EXT2" 1 1031 "0x00F010"
D G "INT_RB" 1 1032 "0x01FFF208"
D G "INT_AD" 1 1033 "0x009D40"
D G "INT_RDA" 1 1034 "0x009D20"
D G "INT_TBE" 1 1035 "0x009D10"
D G "INT_SSP" 1 1036 "0x009D08"
D G "INT_CCP1" 1 1037 "0x009D04"
D G "INT_CCP2" 1 1038 "0x00A001"
D G "INT_BUSCOL" 1 1039 "0x00A008"
D G "INT_COMP" 1 1040 "0x00A040"
D G "INT_EEPROM" 1 1041 "0x00A010"
D G "INT_TBE2" 1 1042 "0x00A310"
D G "INT_RDA2" 1 1043 "0x00A320"
D G "INT_OSCF" 1 1044 "0x00A080"
D G "INT_HLVD" 1 1045 "0x00A004"
D G "INT_BUSCOL2" 1 1046 "0x00A340"
D G "INT_COMP2" 1 1047 "0x00A020"
D G "INT_SSP2" 1 1048 "0x00A380"
D G "INT_TIMER4" 1 1049 "0x007D01"
D G "INT_TIMER5" 1 1050 "0x007D02"
D G "INT_TIMER6" 1 1051 "0x007D04"
D G "INT_CCP3" 1 1052 "0x007A01"
D G "INT_CCP4" 1 1053 "0x007A02"
D G "INT_CCP5" 1 1054 "0x007A04"
D G "INT_TMR1G" 1 1055 "0x00A301"
D G "INT_TMR3G" 1 1056 "0x00A302"
D G "INT_TMR5G" 1 1057 "0x00A304"
D G "INT_CTMU" 1 1058 "0x00A308"
D G "INT_RB4" 1 1059 "0x110F208"
D G "INT_RB5" 1 1060 "0x120F208"
D G "INT_RB6" 1 1061 "0x140F208"
D G "INT_RB7" 1 1062 "0x180F208"
D G "TICKS_PER_SECOND" 0 10 "977" "ZAMANLAMA AYARI"
C L "jump_to_isr" 2 2 26 "FUNCTION"
D G "_STDINT" 3 19 ""
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int8_t" 3 23 "sint8" `805 
T G "uint8_t" 3 24 "int8" `806 
T G "int16_t" 3 25 "sint16" `807 
T G "uint16_t" 3 26 "int16" `808 
T G "int32_t" 3 27 "sint32" `809 
T G "uint32_t" 3 28 "int32" `810 
D G "INT8_MAX" 3 37 " (127)"
D G "INT8_MIN" 3 38 " (-128)"
D G "UINT8_MAX" 3 39 " (255)"
D G "INT16_MAX" 3 41 " (32767)"
D G "INT16_MIN" 3 42 " (-32768)"
D G "UINT16_MAX" 3 43 " (65535)"
D G "INT32_MAX" 3 45 " (2147483647)"
D G "INT32_MIN" 3 46 " (-2147483648)"
D G "UINT32_MAX" 3 47 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int_least8_t" 3 61 "sint8" `811 
T G "uint_least8_t" 3 62 "int8" `812 
T G "int_least16_t" 3 63 "sint16" `813 
T G "uint_least16_t" 3 64 "int16" `814 
T G "int_least32_t" 3 65 "sint32" `815 
T G "uint_least32_t" 3 66 "int32" `816 
D G "INT_LEAST8_MAX" 3 75 " (127)"
D G "INT_LEAST8_MIN" 3 76 " (-128)"
D G "UINT_LEAST8_MAX" 3 77 " (255)"
D G "INT_LEAST16_MAX" 3 79 " (32767)"
D G "INT_LEAST16_MIN" 3 80 " (-32768)"
D G "UINT_LEAST16_MAX" 3 81 " (65535)"
D G "INT_LEAST32_MAX" 3 83 " (2147483647)"
D G "INT_LEAST32_MIN" 3 84 " (-2147483648)"
D G "UINT_LEAST32_MAX" 3 85 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int_fast8_t" 3 112 "sint8" `817 
T G "uint_fast8_t" 3 113 "int8" `818 
D G "INT_FAST8_MAX" 3 114 " (127)"
D G "INT_FAST8_MIN" 3 115 " (-128)"
D G "UINT_FAST8_MAX" 3 116 " (255)"
T G "int_fast16_t" 3 117 "sint16" `819 
T G "uint_fast16_t" 3 118 "int16" `820 
T G "int_fast32_t" 3 121 "sint32" `821 
T G "uint_fast32_t" 3 122 "int32" `822 
D G "INT_FAST16_MAX" 3 124 " (32767)"
D G "INT_FAST16_MIN" 3 125 " (-32768)"
D G "UINT_FAST16_MAX" 3 126 " (65535)"
D G "INT_FAST32_MAX" 3 128 " (2147483647)"
D G "INT_FAST32_MIN" 3 129 " (-2147483648)"
D G "UINT_FAST32_MAX" 3 130 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "uintptr_t" 3 148 "int16" `823 
T G "intptr_t" 3 149 "sint16" `824 
D G "INT8_C" 3 152 "(val) ((int8_t)val)"
D G "UINT8_C" 3 153 "(val) ((uint8_t)val)"
D G "INT16_C" 3 154 "(val) ((int16_t)val)"
D G "UINT16_C" 3 155 "(val) ((uint16_t)val)"
D G "INT32_C" 3 156 "(val) ((int32_t)val)"
D G "UINT32_C" 3 157 "(val) ((uint32_t)val)"
C L "jump_to_isr" 3 2 3 "FUNCTION"
T G "intmax_t" 3 181 "sint32" `825 
T G "uintmax_t" 3 182 "int32" `826 
D G "INTMAXN_MAX" 3 184 " (2147483647)"
D G "INTMAXN_MIN" 3 185 " (-2147483648)"
D G "UINTMAXN_MAX" 3 186 " (4294967295)"
D G "INTMAX_C" 3 188 "(value) ((signed int32)val)"
D G "UINTMAX_C" 3 189 "(value) ((unsigned int32)val)"
D G "bool" 2 39 "int1"
D G "ST_CMD_DELAY" 2 42 "0x80" "special signifier for command lists"
D G "ST77XX_NOP" 2 44 "0x00"
D G "ST77XX_SWRESET" 2 45 "0x01"
D G "ST77XX_RDDID" 2 46 "0x04"
D G "ST77XX_RDDST" 2 47 "0x09"
D G "ST77XX_SLPIN" 2 49 "0x10"
D G "ST77XX_SLPOUT" 2 50 "0x11"
D G "ST77XX_PTLON" 2 51 "0x12"
D G "ST77XX_NORON" 2 52 "0x13"
D G "ST77XX_INVOFF" 2 54 "0x20"
D G "ST77XX_INVON" 2 55 "0x21"
D G "ST77XX_DISPOFF" 2 56 "0x28"
D G "ST77XX_DISPON" 2 57 "0x29"
D G "ST77XX_CASET" 2 58 "0x2A"
D G "ST77XX_RASET" 2 59 "0x2B"
D G "ST77XX_RAMWR" 2 60 "0x2C"
D G "ST77XX_RAMRD" 2 61 "0x2E"
D G "ST77XX_PTLAR" 2 63 "0x30"
D G "ST77XX_COLMOD" 2 64 "0x3A"
D G "ST77XX_MADCTL" 2 65 "0x36"
D G "ST77XX_MADCTL_MY" 2 67 "0x80"
D G "ST77XX_MADCTL_MX" 2 68 "0x40"
D G "ST77XX_MADCTL_MV" 2 69 "0x20"
D G "ST77XX_MADCTL_ML" 2 70 "0x10"
D G "ST77XX_MADCTL_RGB" 2 71 "0x00"
D G "ST77XX_RDID1" 2 73 "0xDA"
D G "ST77XX_RDID2" 2 74 "0xDB"
D G "ST77XX_RDID3" 2 75 "0xDC"
D G "ST77XX_RDID4" 2 76 "0xDD"
D G "ST7789_BLACK" 2 79 "0x0000"
D G "ST7789_BLUE" 2 80 "0x001F"
D G "ST7789_RED" 2 81 "0xF800"
D G "ST7789_GREEN" 2 82 "0x07E0"
D G "ST7789_CYAN" 2 83 "0x07FF"
D G "ST7789_MAGENTA" 2 84 "0xF81F"
D G "ST7789_YELLOW" 2 85 "0xFFE0"
D G "ST7789_WHITE" 2 86 "0xFFFF"
D G "ST7789_SPI_XFER" 2 89 "(x) SPI_XFER(ST7789, x)"
V G "_width" 2 93 "uint8_t" `827  "/< Display width as modified by current rotation"
V G "_height" 2 94 "uint8_t" `828  "/< Display height as modified by current rotation"
V G "_xstart" 2 95 "uint8_t" `829  "/< Internal framebuffer X offset"
V G "_ystart" 2 96 "uint8_t" `830  "/< Internal framebuffer Y offset"
V G "_colstart" 2 97 "uint8_t" `831  "/< Some displays need this changed to offset"
V G "_rowstart" 2 98 "uint8_t" `832  "/< Some displays need this changed to offset"
V G "rotation" 2 99 "uint8_t" `833  "/< Display rotation (0 thru 3)"
D G "ST7789_240x240_XSTART" 2 110 "0"
D G "ST7789_240x240_YSTART" 2 111 "80"
V G "cmd_240x240" 2 114 "rom uint8_t[1]" `834  "Init commands for 7789 screens"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 78 1 "FUNCTION"
C L "jump_to_isr" 2 142 1 "*"
F N "tft_init" 2 143 ""
f G "tft_init" 2 143 "void()" `835 
F N "drawPixel" 2 145 ""
V L "x" 2 145 "uint8_t" `837 
V L "y" 2 145 "uint8_t" `838 
V L "color" 2 145 "uint16_t" `839 
f G "drawPixel" 2 145 "void(uint8_t x,uint8_t y,uint16_t color)" `836 
F N "drawHLine" 2 146 ""
V L "x" 2 146 "uint8_t" `841 
V L "y" 2 146 "uint8_t" `842 
V L "w" 2 146 "uint8_t" `843 
V L "color" 2 146 "uint16_t" `844 
f G "drawHLine" 2 146 "void(uint8_t x,uint8_t y,uint8_t w,uint16_t color)" `840 
F N "drawVLine" 2 147 ""
V L "x" 2 147 "uint8_t" `846 
V L "y" 2 147 "uint8_t" `847 
V L "h" 2 147 "uint8_t" `848 
V L "color" 2 147 "uint16_t" `849 
f G "drawVLine" 2 147 "void(uint8_t x,uint8_t y,uint8_t h,uint16_t color)" `845 
F N "fillRect" 2 148 ""
V L "x" 2 148 "uint8_t" `851 
V L "y" 2 148 "uint8_t" `852 
V L "w" 2 148 "uint8_t" `853 
V L "h" 2 148 "uint8_t" `854 
V L "color" 2 148 "uint16_t" `855 
f G "fillRect" 2 148 "void(uint8_t x,uint8_t y,uint8_t w,uint8_t h,uint16_t color)" `850 
F N "boya" 2 149 ""
V L "color" 2 149 "uint16_t" `857 
f G "boya" 2 149 "void(uint16_t color)" `856 
F N "setRotation" 2 150 ""
V L "m" 2 150 "uint8_t" `859 
f G "setRotation" 2 150 "void(uint8_t m)" `858 
F N "invertDisplay" 2 151 ""
V L "i" 2 151 "int8" `861 
f G "invertDisplay" 2 151 "void(int8 i)" `860 
F N "pushColor" 2 152 ""
V L "color" 2 152 "uint16_t" `863 
f G "pushColor" 2 152 "void(uint16_t color)" `862  "************************* Non User Functions *************************//"
F N "startWrite" 2 155 ""
f G "startWrite" 2 155 "void()" `864 
F N "endWrite" 2 156 ""
f G "endWrite" 2 156 "void()" `865 
F N "displayInit" 2 157 ""
V L "addr" 2 157 "rom uint8_t *" `867 
f G "displayInit" 2 157 "void(rom uint8_t * addr)" `866 
F N "writeCommand" 2 158 ""
V L "cmd" 2 158 "uint8_t" `870 
f G "writeCommand" 2 158 "void(uint8_t cmd)" `869 
F N "setAddrWindow" 2 159 ""
V L "x" 2 159 "uint8_t" `872 
V L "y" 2 159 "uint8_t" `873 
V L "w" 2 159 "uint8_t" `874 
V L "h" 2 159 "uint8_t" `875 
f G "setAddrWindow" 2 159 "void(uint8_t x,uint8_t y,uint8_t w,uint8_t h)" `871  "@brief  Call before issuing command(s) or data to display. Performs"
C L "setAddrWindow" 2 142 2 "FUNCTION"
F N "startWrite" 2 168 ""
F G "startWrite" 2 168 "void()" `864  "@brief  Call after issuing command(s) or data to display. Performs"
C L "endWrite" 2 142 2 "FUNCTION"
F N "endWrite" 2 181 ""
F G "endWrite" 2 181 "void()" `865  "@brief  Write a single command byte to the display. Chip-select and"
C L "writeCommand" 2 142 5 "FUNCTION"
F N "writeCommand" 2 197 ""
V L "cmd" 2 197 "uint8_t" `877 
F G "writeCommand" 2 197 "void(uint8_t cmd)" `869 
C L "displayInit" 2 142 3 "FUNCTION"
F N "displayInit" 2 210 ""
V L "addr" 2 210 "rom uint8_t *" `877 
F G "displayInit" 2 210 "void(rom uint8_t * addr)" `866 
V L "numCommands" 2 211 "uint8_t" `876 
V L "numArgs" 2 211 "uint8_t" `877 
V L "ms" 2 212 "uint16_t" `878 
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "displayInit" 2 142 1 "FUNCTION"
C L "tft_init" 2 142 1 "FUNCTION"
F N "tft_init" 2 241 ""
F G "tft_init" 2 241 "void()" `835 
C L "setAddrWindow" 2 142 5 "FUNCTION"
F N "setAddrWindow" 2 277 ""
V L "x" 2 277 "uint8_t" `872 
V L "y" 2 277 "uint8_t" `873 
V L "w" 2 277 "uint8_t" `874 
V L "h" 2 277 "uint8_t" `883 
F G "setAddrWindow" 2 277 "void(uint8_t x,uint8_t y,uint8_t w,uint8_t h)" `871 
C L "setAddrWindow" 2 142 1 "FUNCTION"
C L "setAddrWindow" 2 142 1 "FUNCTION"
C L "setAddrWindow" 2 142 1 "FUNCTION"
C L "setRotation" 2 142 2 "FUNCTION"
F N "setRotation" 2 302 ""
V L "m" 2 302 "uint8_t" `880 
F G "setRotation" 2 302 "void(uint8_t m)" `858 
V L "madctl" 2 303 "uint8_t" `879 
C L "setRotation" 2 142 1 "FUNCTION"
F N "drawPixel" 2 335 ""
V L "x" 2 335 "uint8_t" `837 
V L "y" 2 335 "uint8_t" `838 
V L "color" 2 335 "uint16_t" `884 
F G "drawPixel" 2 335 "void(uint8_t x,uint8_t y,uint16_t color)" `836 
C L "drawHLine" 2 142 5 "FUNCTION"
F N "drawHLine" 2 354 ""
V L "x" 2 354 "uint8_t" `841 
V L "y" 2 354 "uint8_t" `842 
V L "w" 2 354 "uint8_t" `843 
V L "color" 2 354 "uint16_t" `885 
F G "drawHLine" 2 354 "void(uint8_t x,uint8_t y,uint8_t w,uint16_t color)" `840 
V L "hi" 2 356 "uint8_t" `881 
V L "lo" 2 356 "uint8_t" `882 
C L "drawVLine" 2 142 5 "FUNCTION"
F N "drawVLine" 2 381 ""
V L "x" 2 381 "uint8_t" `846 
V L "y" 2 381 "uint8_t" `847 
V L "h" 2 381 "uint8_t" `848 
V L "color" 2 381 "uint16_t" `887 
F G "drawVLine" 2 381 "void(uint8_t x,uint8_t y,uint8_t h,uint16_t color)" `845 
V L "hi" 2 383 "uint8_t" `883 
V L "lo" 2 383 "uint8_t" `884 
C L "fillRect" 2 142 6 "FUNCTION"
F N "fillRect" 2 406 ""
V L "x" 2 406 "uint8_t" `851 
V L "y" 2 406 "uint8_t" `852 
V L "w" 2 406 "uint8_t" `853 
V L "h" 2 406 "uint8_t" `854 
V L "color" 2 406 "uint16_t" `890 
F G "fillRect" 2 406 "void(uint8_t x,uint8_t y,uint8_t w,uint8_t h,uint16_t color)" `850 
C L "fillRect" 2 142 1 "FUNCTION"
V L "hi" 2 408 "uint8_t" `885 
V L "lo" 2 408 "uint8_t" `886 
V L "px" 2 417 "uint16_t" `887 
C L "fillScreen" 2 142 2 "FUNCTION"
F N "fillScreen" 2 432 ""
V L "color" 2 432 "uint16_t" `892 
F G "fillScreen" 2 432 "void(uint16_t color)" `891 
C L "invertDisplay" 2 142 3 "FUNCTION"
F N "invertDisplay" 2 443 ""
V L "i" 2 443 "int8" `894 
F G "invertDisplay" 2 443 "void(int8 i)" `860 
C L "pushColor" 2 142 5 "FUNCTION"
F N "pushColor" 2 456 ""
V L "color" 2 456 "uint16_t" `894 
F G "pushColor" 2 456 "void(uint16_t color)" `862 
V L "hi" 2 457 "uint8_t" `893 
V L "lo" 2 457 "uint8_t" `894 
C L "display_drawLine" 2 142 1 "FUNCTION"
C L "display_drawLine" 4 2 34 "FUNCTION"
C L "display_drawLine" 3 2 12 "FUNCTION"
C L "display_drawLine" 4 53 1 "*"
F N "display_drawLine" 4 54 ""
V L "x0" 4 54 "uint16_t" `896 
V L "y0" 4 54 "uint16_t" `897 
V L "x1" 4 54 "uint16_t" `898 
V L "y1" 4 54 "uint16_t" `899 
V L "color" 4 54 "uint16_t" `900 
f G "display_drawLine" 4 54 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t color)" `895 
F N "display_drawRect" 4 55 ""
V L "x" 4 55 "uint16_t" `902 
V L "y" 4 55 "uint16_t" `903 
V L "w" 4 55 "uint16_t" `904 
V L "h" 4 55 "uint16_t" `905 
V L "color" 4 55 "uint16_t" `906 
f G "display_drawRect" 4 55 "void(uint16_t x,uint16_t y,uint16_t w,uint16_t h,uint16_t color)" `901 
F N "display_drawCircle" 4 56 ""
V L "x0" 4 56 "uint16_t" `908 
V L "y0" 4 56 "uint16_t" `909 
V L "r" 4 56 "uint16_t" `910 
V L "color" 4 56 "uint16_t" `911 
f G "display_drawCircle" 4 56 "void(uint16_t x0,uint16_t y0,uint16_t r,uint16_t color)" `907 
F N "display_drawCircleHelper" 4 57 ""
V L "x0" 4 57 "uint16_t" `913 
V L "y0" 4 57 "uint16_t" `914 
V L "r" 4 57 "uint16_t" `915 
V L "cornername" 4 57 "uint8_t" `916 
V L "color" 4 57 "uint16_t" `917 
f G "display_drawCircleHelper" 4 57 "void(uint16_t x0,uint16_t y0,uint16_t r,uint8_t cornername,uint16_t color)" `912 
F N "display_fillCircle" 4 58 ""
V L "x0" 4 58 "uint16_t" `919 
V L "y0" 4 58 "uint16_t" `920 
V L "r" 4 58 "uint16_t" `921 
V L "color" 4 58 "uint16_t" `922 
f G "display_fillCircle" 4 58 "void(uint16_t x0,uint16_t y0,uint16_t r,uint16_t color)" `918 
F N "display_fillCircleHelper" 4 59 ""
V L "x0" 4 59 "uint16_t" `924 
V L "y0" 4 59 "uint16_t" `925 
V L "r" 4 59 "uint16_t" `926 
V L "cornername" 4 59 "uint8_t" `927 
V L "delta" 4 59 "uint16_t" `928 
V L "color" 4 59 "uint16_t" `929 
f G "display_fillCircleHelper" 4 59 "void(uint16_t x0,uint16_t y0,uint16_t r,uint8_t cornername,uint16_t delta,uint16_t color)" `923 
F N "display_drawTriangle" 4 60 ""
V L "x0" 4 60 "uint16_t" `931 
V L "y0" 4 60 "uint16_t" `932 
V L "x1" 4 60 "uint16_t" `933 
V L "y1" 4 60 "uint16_t" `934 
V L "x2" 4 60 "uint16_t" `935 
V L "y2" 4 60 "uint16_t" `936 
V L "color" 4 60 "uint16_t" `937 
f G "display_drawTriangle" 4 60 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color)" `930 
F N "display_fillTriangle" 4 61 ""
V L "x0" 4 61 "uint16_t" `939 
V L "y0" 4 61 "uint16_t" `940 
V L "x1" 4 61 "uint16_t" `941 
V L "y1" 4 61 "uint16_t" `942 
V L "x2" 4 61 "uint16_t" `943 
V L "y2" 4 61 "uint16_t" `944 
V L "color" 4 61 "uint16_t" `945 
f G "display_fillTriangle" 4 61 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color)" `938 
F N "display_drawRoundRect" 4 62 ""
V L "x0" 4 62 "uint16_t" `947 
V L "y0" 4 62 "uint16_t" `948 
V L "w" 4 62 "uint16_t" `949 
V L "h" 4 62 "uint16_t" `950 
V L "radius" 4 62 "uint16_t" `951 
V L "color" 4 62 "uint16_t" `952 
f G "display_drawRoundRect" 4 62 "void(uint16_t x0,uint16_t y0,uint16_t w,uint16_t h,uint16_t radius,uint16_t color)" `946 
F N "display_fillRoundRect" 4 63 ""
V L "x0" 4 63 "uint16_t" `954 
V L "y0" 4 63 "uint16_t" `955 
V L "w" 4 63 "uint16_t" `956 
V L "h" 4 63 "uint16_t" `957 
V L "radius" 4 63 "uint16_t" `958 
V L "color" 4 63 "uint16_t" `959 
f G "display_fillRoundRect" 4 63 "void(uint16_t x0,uint16_t y0,uint16_t w,uint16_t h,uint16_t radius,uint16_t color)" `953 
F N "kursor_ayarla" 4 65 ""
V L "x" 4 65 "uint16_t" `961 
V L "y" 4 65 "uint16_t" `962 
f G "kursor_ayarla" 4 65 "void(uint16_t x,uint16_t y)" `960 
F N "display_setTextColor" 4 66 ""
V L "c" 4 66 "uint16_t" `964 
f G "display_setTextColor" 4 66 "void(uint16_t c)" `963 
F N "display_setTextColor" 4 67 ""
V L "c" 4 67 "uint16_t" `966 
V L "bg" 4 67 "uint16_t" `967 
f G "display_setTextColor" 4 67 "void(uint16_t c,uint16_t bg)" `965 
F N "display_setTextSize" 4 68 ""
V L "s" 4 68 "uint8_t" `969 
f G "display_setTextSize" 4 68 "void(uint8_t s)" `968 
F N "display_setTextWrap" 4 69 ""
V L "w" 4 69 "int8" `971 
f G "display_setTextWrap" 4 69 "void(int8 w)" `970 
F N "display_print" 4 70 ""
V L "c" 4 70 "uint8_t" `973 
f G "display_print" 4 70 "void(uint8_t c)" `972 
F N "display_customChar" 4 71 ""
V L "c" 4 71 "rom uint8_t *" `975 
f G "display_customChar" 4 71 "void(rom uint8_t * c)" `974 
F N "display_drawChar" 4 72 ""
V L "x" 4 72 "uint16_t" `977 
V L "y" 4 72 "uint16_t" `978 
V L "c" 4 72 "uint8_t" `979 
V L "color" 4 72 "uint16_t" `980 
V L "bg" 4 72 "uint16_t" `981 
V L "size" 4 72 "uint8_t" `982 
f G "display_drawChar" 4 72 "void(uint16_t x,uint16_t y,uint8_t c,uint16_t color,uint16_t bg,uint8_t size)" `976 
F N "display_getRotation" 4 74 ""
f G "display_getRotation" 4 74 "uint8_t()" `983 
F N "getCursorX" 4 75 ""
f G "getCursorX" 4 75 "uint16_t()" `984 
F N "getCursorY" 4 76 ""
f G "getCursorY" 4 76 "uint16_t()" `985 
F N "display_getWidth" 4 77 ""
f G "display_getWidth" 4 77 "uint16_t()" `986 
F N "display_getHeight" 4 78 ""
f G "display_getHeight" 4 78 "uint16_t()" `987 
F N "display_color565" 4 79 ""
V L "red" 4 79 "uint8_t" `989 
V L "green" 4 79 "uint8_t" `990 
V L "blue" 4 79 "uint8_t" `991 
f G "display_color565" 4 79 "uint16_t(uint8_t red,uint8_t green,uint8_t blue)" `988 
F N "display_drawBitmapV1" 4 81 ""
V L "x" 4 81 "uint16_t" `993 
V L "y" 4 81 "uint16_t" `994 
V L "bitmap" 4 81 "rom uint8_t *" `995 
V L "w" 4 81 "uint16_t" `996 
V L "h" 4 81 "uint16_t" `997 
V L "color" 4 81 "uint16_t" `998 
f G "display_drawBitmapV1" 4 81 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color)" `992 
F N "display_drawBitmapV1_bg" 4 82 ""
V L "x" 4 82 "uint16_t" `1000 
V L "y" 4 82 "uint16_t" `1001 
V L "bitmap" 4 82 "rom uint8_t *" `1002 
V L "w" 4 82 "uint16_t" `1003 
V L "h" 4 82 "uint16_t" `1004 
V L "color" 4 82 "uint16_t" `1005 
V L "bg" 4 82 "uint16_t" `1006 
f G "display_drawBitmapV1_bg" 4 82 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color,uint16_t bg)" `999 
F N "display_drawBitmapV2" 4 83 ""
V L "x" 4 83 "uint16_t" `1008 
V L "y" 4 83 "uint16_t" `1009 
V L "bitmap" 4 83 "rom uint8_t *" `1010 
V L "w" 4 83 "uint16_t" `1011 
V L "h" 4 83 "uint16_t" `1012 
V L "color" 4 83 "uint16_t" `1013 
f G "display_drawBitmapV2" 4 83 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color)" `1007 
F N "display_drawBitmapV2_bg" 4 84 ""
V L "x" 4 84 "uint16_t" `1015 
V L "y" 4 84 "uint16_t" `1016 
V L "bitmap" 4 84 "rom uint8_t *" `1017 
V L "w" 4 84 "uint16_t" `1018 
V L "h" 4 84 "uint16_t" `1019 
V L "color" 4 84 "uint16_t" `1020 
V L "bg" 4 84 "uint16_t" `1021 
f G "display_drawBitmapV2_bg" 4 84 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color,uint16_t bg)" `1014  "************************* Non User Functions *************************//"
F N "writeLine" 4 87 ""
V L "x0" 4 87 "uint16_t" `1023 
V L "y0" 4 87 "uint16_t" `1024 
V L "x1" 4 87 "uint16_t" `1025 
V L "y1" 4 87 "uint16_t" `1026 
V L "color" 4 87 "uint16_t" `1027 
f G "writeLine" 4 87 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t color)" `1022 
D G "min" 4 91 "(a,b) (((a) < (b)) ? (a) : (b))"
D G "_swap_int16_t" 4 94 "(a,b) { int16_t t = a; a = b; b = t; }"
D G "display_width" 4 97 "_width"
D G "display_height" 4 98 "_height"
D G "display_drawPixel" 4 100 "drawPixel"
D G "display_drawVLine" 4 101 "drawVLine"
D G "display_drawHLine" 4 102 "drawHLine"
D G "EKRAN_BOYA" 4 103 ""
D G "display_fillRect" 4 104 "fillRect"
D G "display_setRotation" 4 105 "setRotation"
D G "display_invert" 4 106 "invertDisplay"
V G "cursor_x" 4 110 "int16_t" `1028 
C L "writeLine" 4 53 1 "FUNCTION"
V G "cursor_y" 4 111 "int16_t" `1029 
C L "writeLine" 4 53 1 "FUNCTION"
V G "textcolor" 4 113 "uint16_t" `1030 
C L "writeLine" 4 53 1 "FUNCTION"
V G "textbgcolor" 4 114 "uint16_t" `1031 
C L "writeLine" 4 53 1 "FUNCTION"
V G "textsize" 4 116 "uint8_t" `1032 
C L "writeLine" 4 53 1 "FUNCTION"
V G "wrap" 4 118 "int1" `1033 
C L "writeLine" 4 53 2 "FUNCTION"
V G "font" 4 122 "uint8_t[256][5]" `1034 
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 1 "FUNCTION"
C L "writeLine" 4 53 7 "FUNCTION"
F N "writeLine" 4 392 ""
V L "x0" 4 392 "uint16_t" `1023 
V L "y0" 4 392 "uint16_t" `1024 
V L "x1" 4 392 "uint16_t" `1025 
V L "y1" 4 392 "uint16_t" `1026 
V L "color" 4 392 "uint16_t" `1042 
F G "writeLine" 4 392 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t color)" `1022 
V L "steep" 4 393 "int1" `1037 
V L "t" 4 395 "int16_t" `1038 
V L "t" 4 396 "int16_t" `1039 
V L "t" 4 400 "int16_t" `1040 
V L "t" 4 401 "int16_t" `1041 
V L "dx" 4 404 "int16_t" `1042 
V L "dy" 4 404 "int16_t" `1043 
V L "err" 4 408 "int16_t" `1044 
V L "ystep" 4 409 "int16_t" `1048 
C L "display_drawLine" 4 53 6 "FUNCTION"
F N "display_drawLine" 4 441 ""
V L "x0" 4 441 "uint16_t" `896 
V L "y0" 4 441 "uint16_t" `897 
V L "x1" 4 441 "uint16_t" `898 
V L "y1" 4 441 "uint16_t" `899 
V L "color" 4 441 "uint16_t" `1054 
F G "display_drawLine" 4 441 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t color)" `895  "Update in subclasses if desired!"
V L "t" 4 444 "int16_t" `1049 
V L "t" 4 447 "int16_t" `1050 
C L "display_drawCircle" 4 53 5 "FUNCTION"
F N "display_drawCircle" 4 463 ""
V L "x0" 4 463 "uint16_t" `908 
V L "y0" 4 463 "uint16_t" `909 
V L "r" 4 463 "uint16_t" `910 
V L "color" 4 463 "uint16_t" `1055 
F G "display_drawCircle" 4 463 "void(uint16_t x0,uint16_t y0,uint16_t r,uint16_t color)" `907 
V L "f" 4 464 "int16_t" `1051 
V L "ddF_x" 4 465 "int16_t" `1052 
V L "ddF_y" 4 466 "int16_t" `1053 
V L "x" 4 467 "int16_t" `1054 
V L "y" 4 468 "int16_t" `1055 
C L "display_drawCircleHelper" 4 53 6 "FUNCTION"
F N "display_drawCircleHelper" 4 506 ""
V L "x0" 4 506 "uint16_t" `913 
V L "y0" 4 506 "uint16_t" `914 
V L "r" 4 506 "uint16_t" `915 
V L "cornername" 4 506 "uint8_t" `916 
V L "color" 4 506 "uint16_t" `1061 
F G "display_drawCircleHelper" 4 506 "void(uint16_t x0,uint16_t y0,uint16_t r,uint8_t cornername,uint16_t color)" `912 
V L "f" 4 507 "int16_t" `1056 
V L "ddF_x" 4 508 "int16_t" `1057 
V L "ddF_y" 4 509 "int16_t" `1058 
V L "x" 4 510 "int16_t" `1059 
V L "y" 4 511 "int16_t" `1060 
C L "display_fillCircle" 4 53 5 "FUNCTION"
F N "display_fillCircle" 4 550 ""
V L "x0" 4 550 "uint16_t" `919 
V L "y0" 4 550 "uint16_t" `920 
V L "r" 4 550 "uint16_t" `921 
V L "color" 4 550 "uint16_t" `1065 
F G "display_fillCircle" 4 550 "void(uint16_t x0,uint16_t y0,uint16_t r,uint16_t color)" `918 
C L "display_fillCircleHelper" 4 53 7 "FUNCTION"
F N "display_fillCircleHelper" 4 567 ""
V L "x0" 4 567 "uint16_t" `924 
V L "y0" 4 567 "uint16_t" `925 
V L "r" 4 567 "uint16_t" `926 
V L "corners" 4 567 "uint8_t" `927 
V L "delta" 4 567 "uint16_t" `928 
V L "color" 4 567 "uint16_t" `1067 
F G "display_fillCircleHelper" 4 567 "void(uint16_t x0,uint16_t y0,uint16_t r,uint8_t corners,uint16_t delta,uint16_t color)" `923 
V L "f" 4 568 "int16_t" `1061 
V L "ddF_x" 4 569 "int16_t" `1062 
V L "ddF_y" 4 570 "int16_t" `1063 
V L "x" 4 571 "int16_t" `1064 
V L "y" 4 572 "int16_t" `1065 
V L "px" 4 573 "int16_t" `1066 
V L "py" 4 574 "int16_t" `1067 
C L "display_fillCircleHelper" 4 53 1 "FUNCTION"
C L "display_fillCircleHelper" 4 53 2 "FUNCTION"
C L "display_drawRect" 4 53 6 "FUNCTION"
F N "display_drawRect" 4 612 ""
V L "x" 4 612 "uint16_t" `902 
V L "y" 4 612 "uint16_t" `903 
V L "w" 4 612 "uint16_t" `904 
V L "h" 4 612 "uint16_t" `905 
V L "color" 4 612 "uint16_t" `1076 
F G "display_drawRect" 4 612 "void(uint16_t x,uint16_t y,uint16_t w,uint16_t h,uint16_t color)" `901 
C L "display_drawRoundRect" 4 53 7 "FUNCTION"
F N "display_drawRoundRect" 4 630 ""
V L "x" 4 630 "uint16_t" `947 
V L "y" 4 630 "uint16_t" `948 
V L "w" 4 630 "uint16_t" `949 
V L "h" 4 630 "uint16_t" `950 
V L "r" 4 630 "uint16_t" `951 
V L "color" 4 630 "uint16_t" `1077 
F G "display_drawRoundRect" 4 630 "void(uint16_t x,uint16_t y,uint16_t w,uint16_t h,uint16_t r,uint16_t color)" `946 
V L "max_radius" 4 631 "int16_t" `1071 
C L "display_drawRoundRect" 4 53 1 "FUNCTION"
C L "display_drawRoundRect" 4 53 1 "FUNCTION"
C L "display_drawRoundRect" 4 53 1 "FUNCTION"
C L "display_drawRoundRect" 4 53 1 "FUNCTION"
C L "display_drawRoundRect" 4 53 1 "FUNCTION"
C L "display_drawRoundRect" 4 53 2 "FUNCTION"
C L "display_fillRoundRect" 4 53 7 "FUNCTION"
F N "display_fillRoundRect" 4 656 ""
V L "x" 4 656 "uint16_t" `954 
V L "y" 4 656 "uint16_t" `955 
V L "w" 4 656 "uint16_t" `956 
V L "h" 4 657 "uint16_t" `957 
V L "r" 4 657 "uint16_t" `958 
V L "color" 4 657 "uint16_t" `1078 
F G "display_fillRoundRect" 4 657 "void(uint16_t x,uint16_t y,uint16_t w,uint16_t h,uint16_t r,uint16_t color)" `953 
V L "max_radius" 4 658 "int16_t" `1072 
C L "display_fillRoundRect" 4 53 1 "FUNCTION"
C L "display_fillRoundRect" 4 53 1 "FUNCTION"
C L "display_fillRoundRect" 4 53 1 "FUNCTION"
C L "display_fillRoundRect" 4 53 1 "FUNCTION"
C L "display_drawTriangle" 4 53 8 "FUNCTION"
F N "display_drawTriangle" 4 680 ""
V L "x0" 4 680 "uint16_t" `931 
V L "y0" 4 680 "uint16_t" `932 
V L "x1" 4 680 "uint16_t" `933 
V L "y1" 4 680 "uint16_t" `934 
V L "x2" 4 681 "uint16_t" `935 
V L "y2" 4 681 "uint16_t" `936 
V L "color" 4 681 "uint16_t" `1080 
F G "display_drawTriangle" 4 681 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color)" `930 
C L "display_fillTriangle" 4 53 8 "FUNCTION"
F N "display_fillTriangle" 4 699 ""
V L "x0" 4 699 "uint16_t" `939 
V L "y0" 4 699 "uint16_t" `940 
V L "x1" 4 699 "uint16_t" `941 
V L "y1" 4 699 "uint16_t" `942 
V L "x2" 4 700 "uint16_t" `943 
V L "y2" 4 700 "uint16_t" `944 
V L "color" 4 700 "uint16_t" `1080 
F G "display_fillTriangle" 4 700 "void(uint16_t x0,uint16_t y0,uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color)" `938 
V L "a" 4 701 "int16_t" `1073 
V L "b" 4 701 "int16_t" `1074 
V L "y" 4 701 "int16_t" `1075 
V L "last" 4 701 "int16_t" `1076  "Sort coordinates by Y order (y2 >= y1 >= y0)"
V L "t" 4 705 "int16_t" `1077 
V L "t" 4 705 "int16_t" `1078 
V L "t" 4 708 "int16_t" `1079 
V L "t" 4 708 "int16_t" `1080 
V L "t" 4 711 "int16_t" `1081 
V L "t" 4 711 "int16_t" `1082 
C L "display_fillTriangle" 4 53 1 "FUNCTION"
V L "dx01" 4 725 "int16_t" `1083 
V L "dy01" 4 726 "int16_t" `1084 
V L "dx02" 4 727 "int16_t" `1085 
V L "dy02" 4 728 "int16_t" `1086 
V L "dx12" 4 729 "int16_t" `1087 
V L "dy12" 4 730 "int16_t" `1088 
V L "sa" 4 732 "int32_t" `1089 
V L "sb" 4 733 "int32_t" `1090 
C L "display_fillTriangle" 4 53 6 "FUNCTION"
C L "display_fillTriangle" 4 53 1 "FUNCTION"
C L "display_fillTriangle" 4 53 1 "FUNCTION"
C L "display_fillTriangle" 4 53 3 "FUNCTION"
V L "t" 4 753 "int16_t" `1094 
C L "display_fillTriangle" 4 53 2 "FUNCTION"
C L "display_fillTriangle" 4 53 3 "FUNCTION"
V L "t" 4 770 "int16_t" `1095 
C L "display_print" 4 53 2 "FUNCTION"
F N "display_print" 4 781 ""
V L "c" 4 781 "uint8_t" `1097 
F G "display_print" 4 781 "void(uint8_t c)" `972 
V L "i" 4 794 "uint8_t" `1096 
V L "line" 4 795 "uint8_t" `1097 
V L "j" 4 796 "uint8_t" `1098 
C L "display_print" 4 53 1 "FUNCTION"
C L "display_customChar" 4 53 1 "FUNCTION"
F N "display_customChar" 4 833 ""
V L "c" 4 833 "rom uint8_t *" `1100 
F G "display_customChar" 4 833 "void(rom uint8_t * c)" `974 
V L "i" 4 835 "uint8_t" `1099 
V L "line" 4 836 "uint8_t" `1100 
V L "j" 4 837 "uint8_t" `1101 
C L "display_customChar" 4 53 1 "FUNCTION"
C L "display_drawChar" 4 53 7 "FUNCTION"
F N "display_drawChar" 4 884 ""
V L "x" 4 884 "uint16_t" `977 
V L "y" 4 884 "uint16_t" `978 
V L "c" 4 884 "uint8_t" `979 
V L "color" 4 884 "uint16_t" `980 
V L "bg" 4 884 "uint16_t" `981 
V L "size" 4 885 "uint8_t" `1108 
F G "display_drawChar" 4 885 "void(uint16_t x,uint16_t y,uint8_t c,uint16_t color,uint16_t bg,uint8_t size)" `976 
V L "prev_x" 4 886 "uint16_t" `1102 
V L "prev_y" 4 887 "uint16_t" `1103 
V L "prev_color" 4 888 "uint16_t" `1104 
V L "prev_bg" 4 889 "uint16_t" `1105 
V L "prev_size" 4 890 "uint8_t" `1106 
C L "display_setCursor" 4 53 3 "FUNCTION"
F N "display_setCursor" 4 911 ""
V L "x" 4 911 "uint16_t" `1108 
V L "y" 4 911 "uint16_t" `1109 
F G "display_setCursor" 4 911 "void(uint16_t x,uint16_t y)" `1107 
C L "display_getCursorX" 4 53 2 "FUNCTION"
F N "display_getCursorX" 4 922 ""
F G "display_getCursorX" 4 922 "uint16_t()" `1110 
C L "display_getCursorY" 4 53 2 "FUNCTION"
F N "display_getCursorY" 4 932 ""
F G "display_getCursorY" 4 932 "uint16_t()" `1111 
C L "display_setTextSize" 4 53 2 "FUNCTION"
F N "display_setTextSize" 4 942 ""
V L "s" 4 942 "uint8_t" `1113 
F G "display_setTextSize" 4 942 "void(uint8_t s)" `968 
C L "display_setTextColor" 4 53 3 "FUNCTION"
F N "display_setTextColor" 4 953 ""
V L "c" 4 953 "uint16_t" `966 
V L "b" 4 953 "uint16_t" `1114 
F G "display_setTextColor" 4 953 "void(uint16_t c,uint16_t b)" `965 
C L "display_setTextColor" 4 53 2 "FUNCTION"
F N "display_setTextColor" 4 964 ""
V L "c" 4 964 "uint16_t" `1113 
F G "display_setTextColor" 4 964 "void(uint16_t c)" `963 
C L "display_setTextWrap" 4 53 2 "FUNCTION"
F N "display_setTextWrap" 4 974 ""
V L "w" 4 974 "int8" `1113 
F G "display_setTextWrap" 4 974 "void(int8 w)" `970 
C L "display_getRotation" 4 53 2 "FUNCTION"
F N "display_getRotation" 4 984 ""
F G "display_getRotation" 4 984 "uint8_t()" `983 
C L "display_getWidth" 4 53 2 "FUNCTION"
F N "display_getWidth" 4 994 ""
F G "display_getWidth" 4 994 "uint16_t()" `986 
C L "display_getHeight" 4 53 2 "FUNCTION"
F N "display_getHeight" 4 1004 ""
F G "display_getHeight" 4 1004 "uint16_t()" `987 
C L "display_color565" 4 53 8 "FUNCTION"
F N "display_color565" 4 1020 ""
V L "red" 4 1020 "uint8_t" `989 
V L "green" 4 1020 "uint8_t" `990 
V L "blue" 4 1020 "uint8_t" `1115 
F G "display_color565" 4 1020 "uint16_t(uint8_t red,uint8_t green,uint8_t blue)" `988 
C L "display_drawBitmapV1" 4 53 8 "FUNCTION"
F N "display_drawBitmapV1" 4 1036 ""
V L "x" 4 1036 "uint16_t" `993 
V L "y" 4 1036 "uint16_t" `994 
V L "bitmap" 4 1036 "rom uint8_t *" `995 
V L "w" 4 1036 "uint16_t" `996 
V L "h" 4 1036 "uint16_t" `997 
V L "color" 4 1037 "uint16_t" `1118 
F G "display_drawBitmapV1" 4 1037 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color)" `992 
V L "i" 4 1038 "uint16_t" `1112 
V L "j" 4 1040 "uint16_t" `1113 
C L "display_drawBitmapV1_bg" 4 53 9 "FUNCTION"
F N "display_drawBitmapV1_bg" 4 1061 ""
V L "x" 4 1061 "uint16_t" `1000 
V L "y" 4 1061 "uint16_t" `1001 
V L "bitmap" 4 1061 "rom uint8_t *" `1002 
V L "w" 4 1061 "uint16_t" `1003 
V L "h" 4 1061 "uint16_t" `1004 
V L "color" 4 1062 "uint16_t" `1005 
V L "bg" 4 1062 "uint16_t" `1121 
F G "display_drawBitmapV1_bg" 4 1062 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color,uint16_t bg)" `999 
V L "i" 4 1063 "uint16_t" `1114 
V L "j" 4 1065 "uint16_t" `1115 
C L "display_drawBitmapV2" 4 53 8 "FUNCTION"
F N "display_drawBitmapV2" 4 1087 ""
V L "x" 4 1087 "uint16_t" `1008 
V L "y" 4 1087 "uint16_t" `1009 
V L "bitmap" 4 1087 "rom uint8_t *" `1010 
V L "w" 4 1087 "uint16_t" `1011 
V L "h" 4 1087 "uint16_t" `1012 
V L "color" 4 1088 "uint16_t" `1122 
F G "display_drawBitmapV2" 4 1088 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color)" `1007 
V L "byteWidth" 4 1090 "int16_t" `1116 
C L "display_drawBitmapV2" 4 53 1 "FUNCTION"
V L "_byte" 4 1091 "uint8_t" `1117 
V L "j" 4 1093 "int16_t" `1118 
V L "i" 4 1094 "int16_t" `1119 
C L "display_drawBitmapV2_bg" 4 53 9 "FUNCTION"
F N "display_drawBitmapV2_bg" 4 1116 ""
V L "x" 4 1116 "uint16_t" `1015 
V L "y" 4 1116 "uint16_t" `1016 
V L "bitmap" 4 1116 "rom uint8_t *" `1017 
V L "w" 4 1116 "uint16_t" `1018 
V L "h" 4 1116 "uint16_t" `1019 
V L "color" 4 1117 "uint16_t" `1020 
V L "bg" 4 1117 "uint16_t" `1127 
F G "display_drawBitmapV2_bg" 4 1117 "void(uint16_t x,uint16_t y,rom uint8_t * bitmap,uint16_t w,uint16_t h,uint16_t color,uint16_t bg)" `1014 
V L "byteWidth" 4 1119 "int16_t" `1120 
C L "display_drawBitmapV2_bg" 4 53 1 "FUNCTION"
V L "_byte" 4 1120 "uint8_t" `1121 
V L "j" 4 1122 "int16_t" `1122 
V L "i" 4 1123 "int16_t" `1123 
C L "testlines" 4 53 1 "FUNCTION"
F N "testlines" 0 13 ""
V L "color" 0 13 "uint16_t" `1125 
F G "testlines" 0 13 "void(uint16_t color,uint16_t color,uint16_t bg)" `1124 
V L "x" 0 14 "uint8_t" `1126 
V L "y" 0 14 "uint8_t" `1127 
F N "testdrawtext" 0 55 ""
V L "text" 0 55 "*int8" `1129 
V L "color" 0 55 "uint16_t" `1130 
F G "testdrawtext" 0 55 "void(*int8 text,uint16_t color)" `1128 
F N "testfastlines" 0 62 ""
V L "color1" 0 62 "uint16_t" `1136 
V L "color2" 0 62 "uint16_t" `1137 
F G "testfastlines" 0 62 "void(uint16_t color1,uint16_t color2)" `1135 
V L "x" 0 63 "uint8_t" `1138 
V L "y" 0 63 "uint8_t" `1139 
F N "testdrawrects" 0 72 ""
V L "color" 0 72 "uint16_t" `1141 
F G "testdrawrects" 0 72 "void(uint16_t color)" `1140 
V L "x" 0 73 "uint8_t" `1142 
F N "testfillrects" 0 80 ""
V L "color1" 0 80 "uint16_t" `1144 
V L "color2" 0 80 "uint16_t" `1145 
F G "testfillrects" 0 80 "void(uint16_t color1,uint16_t color2)" `1143 
V L "x" 0 81 "uint8_t" `1146 
F N "testfillcircles" 0 88 ""
V L "radius" 0 88 "uint8_t" `1148 
V L "color" 0 88 "uint16_t" `1149 
F G "testfillcircles" 0 88 "void(uint8_t radius,uint16_t color)" `1147 
V L "x" 0 89 "uint8_t" `1150 
V L "y" 0 89 "uint8_t" `1151 
F N "testdrawcircles" 0 97 ""
V L "radius" 0 97 "uint8_t" `1153 
V L "color" 0 97 "uint16_t" `1154 
F G "testdrawcircles" 0 97 "void(uint8_t radius,uint16_t color)" `1152 
V L "x" 0 98 "uint16_t" `1155 
V L "y" 0 98 "uint16_t" `1156 
F N "testtriangles" 0 106 ""
F G "testtriangles" 0 106 "void()" `1157 
V L "color" 0 107 "uint16_t" `1158 
V L "t" 0 108 "uint8_t" `1159 
V L "w" 0 109 "uint8_t" `1160 
V L "x" 0 110 "uint8_t" `1161 
V L "y" 0 111 "uint8_t" `1162 
V L "z" 0 112 "uint8_t" `1163 
F N "testroundrects" 0 122 ""
F G "testroundrects" 0 122 "void()" `1164 
V L "color" 0 124 "uint16_t" `1165 
V L "i" 0 125 "uint8_t" `1166 
V L "t" 0 125 "uint8_t" `1167 
V L "x" 0 127 "uint8_t" `1168 
V L "y" 0 128 "uint8_t" `1169 
V L "w" 0 129 "uint8_t" `1170 
V L "h" 0 130 "uint8_t" `1171 
F N "tftPrintTest" 0 143 ""
F G "tftPrintTest" 0 143 "void()" `1172 
V L "p" 0 144 "float" `1173 
C L "tftPrintTest" 0 170 1 "FUNCTION"
F N "mediabuttons" 0 182 ""
F G "mediabuttons" 0 182 "void()" `1206  "play"
C L "mediabuttons" 0 170 1 "FUNCTION"
C L "mediabuttons" 0 170 1 "FUNCTION"
C L "mediabuttons" 0 170 1 "FUNCTION"
C L "mediabuttons" 0 170 1 "FUNCTION"
C L "MAIN" 0 170 1 "FUNCTION"
F N "MAIN" 0 203 ""
F G "MAIN" 0 204 "void()" `1207 
C L "MAIN" 0 170 2 "FUNCTION"
C L "MAIN" 0 170 2 "FUNCTION"
C L "MAIN" 0 170 1 "FUNCTION"
C L "MAIN" 0 170 1 "FUNCTION"
C L "MAIN" 0 170 1 "FUNCTION"
C L "MAIN" 0 170 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "set_slow_slew_a" 1 0
F B "set_slow_slew_b" 1 0
F B "set_slow_slew_c" 1 0
F B "set_slow_slew_d" 1 0
F B "set_slow_slew_e" 1 0
F B "port_b_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "set_analog_pins" 0 255
F B "setup_adc_reference" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_timer_6" 3 0
F B "get_timer6" 0 0
F B "set_timer6" 1 0
F B "setup_timer_5" 1 0
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 2
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "setup_dac" 1 0
F B "dac_write" 1 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "spi_xfer" 0 3
F B "spi_transfer" 3 4
F B "spi_transfer_write" 2 3
F B "spi_transfer_read" 2 3
F B "spi_speed" 1 3
F B "spi_init" 1 2
F B "get_ticks" 0 1
F B "set_ticks" 1 2
